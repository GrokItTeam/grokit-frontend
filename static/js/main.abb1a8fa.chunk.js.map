{"version":3,"sources":["img/the-forgetting-curve.png","img/combating-the-forgetting-curve.png","img/ExampleGraphs.png","config.js","libs/ContextLib.js","libs/HooksLib.js","libs/ErrorLib.js","components/Forms/SignIn/SignIn.js","components/Forms/SignUp/SignUp.js","components/Forms/ResetPassword/ResetPassword.js","components/CreateNewProject/Modal.js","components/CreateNewProject/NewProject.js","components/AddSkill/AddSkill.js","components/Modals/SingleInputModal.js","components/ProjectList/SkillItem/EditSkill/EditSkill.js","components/ProjectList/SkillItem/SkillItem.js","components/ProjectList/ProjectItem/EditProject/EditProject.js","components/ProjectList/ProjectItem/ProjectItem.js","components/ProjectList/ProjectList.js","components/ProjectList/ExampleProjects/exampleProjectData.js","components/ProjectList/SkillItem/ExampleSkillItem.js","components/ProjectList/ExampleProjects/ExampleProject.js","components/SkillsToDo/NoProjects.js","components/SkillsToDo/SkillToDoItem/PractisedToday.js","components/Modals/OptionSelectModal.js","components/SkillsToDo/SkillToDoItem/MarkSkillAsPractised.js","components/SkillsToDo/SkillToDoItem/Skill.js","components/SkillsToDo/SkillToDoItem/NoSkill.js","components/SkillsToDo/SkillToDoItem/SkillToDoItem.js","components/Timer/Timer.js","components/Message/Message.js","components/SkillsToDo/SkillsToDo.js","components/SkillsToDo/HomePage.js","components/NavBar/NavBar.js","components/IntroPage/IntroPage.js","components/Charts/generateLineChartData.js","components/Charts/LineChart.js","components/Charts/NoChartsDisplay.js","components/Charts/ChartsPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REGION","USER_POOL_ID","APP_CLIENT_ID","AppContext","createContext","useAppContext","useContext","useFormFields","initialState","useState","fields","setValues","event","target","id","value","onError","error","message","toString","Error","alert","withRouter","history","setLoggedIn","setUserId","setName","email","password","validationError","setValidationError","handleFieldChange","clearValidationErrors","updatedValidationError","Object","assign","e","a","preventDefault","length","test","Auth","signIn","currentUserInfo","userInfo","username","attributes","name","push","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","Text","style","color","onClick","to","passwordSchema","passwordValidator","is","min","has","uppercase","lowercase","digits","symbols","newUser","setNewUser","confirmPassword","newName","newEmail","newPassword","confirmationCode","handleNewUserSubmit","validate","signUp","handleConfirmationSubmit","confirmSignUp","user","userId","axios","post","then","response","catch","console","log","onSubmit","bsSize","Button","block","ResetPassword","code","codeSent","setCodeSent","confirmed","setConfirmed","handleSendCodeClick","forgotPassword","handleConfirmClick","forgotPasswordSubmit","autoFocus","Modal","title","status","handleClose","onSave","project","setProject","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","disabled","NewProject","addProject","smShow","setSmShow","AddSkill","projectId","addSkill","skill","setSkill","addAndResetSkill","onKeyPress","key","SingleInputModal","startValue","setValue","variant","EditSkill","skillId","editSkillName","skillName","SkillItem","deleteSkill","Row","window","confirm","EditProject","editProjectName","projectName","ProjectItem","skills","open","deleteProject","cardOpen","setCardOpen","Card","border","aria-controls","aria-expanded","Collapse","in","map","ProjectList","projects","timesTablesProject","javascriptProject","footballProject","ExampleSkillItem","ExampleProject","NoProjects","updatePractisedSkill","Col","PractisedToday","OptionSelectModal","saveChanges","difficulty","MarkSkillAsPractised","Skill","NoSkill","SkillToDoItem","datePractised","skillToDo","moment","isSame","Timer","duration","playing","setPlaying","timerKey","setTimerKey","timerDuration","stratTime","Date","now","remainingTime","renderTime","dimension","time","timerProps","isPlaying","strokeWidth","colors","Container","onComplete","initialRemainingTime","elapsedTime","totalElapsedTime","Message","SkillsToDo","showTimer","setShowTimer","find","HomePage","expanded","setExpanded","loggedIn","signOut","Navbar","expand","Brand","Toggle","Nav","IntroPage","xs","lg","Figure","Image","src","forgettingCurve","width","alt","rounded","Caption","href","combattingForgettingCurve","generateLineChartData","dateFirstPractised","practisedData","chartDataSeries","data","lastData","multiplier","simpleData","flatMap","i","newData","days","day","lastGap0","lastGap1","val","Math","exp","remainingDays","diff","x","y","generateXYData","LineChart","height","chartData","margin","top","right","bottom","left","xScale","tickValues","yScale","axisTop","axisRight","axisLeft","legend","legendPosition","legendOffset","axisBottom","theme","fontSize","fontFamily","axis","text","curve","scheme","lineWidth","pointSize","enableArea","enableGridX","enableGridY","tooltip","point","useMesh","enableCrosshair","NoChartsDisplay","ExampleGraphs","ChartsPage","setChartData","useEffect","get","linechartData","fluid","App","isAuthenticating","setIsAuthenticating","setProjects","currentSession","onLoad","newProject","datePracticed","resProject","Provider","NavBar","exact","path","practisedSkill","put","updatedSkill","updatedProjects","format","newSkill","delete","filter","Boolean","location","hostname","match","Amplify","configure","mandatorySignId","region","config","userPoolId","userPoolWebClientId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abb1a8fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the-forgetting-curve.1d0cb6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/combating-the-forgetting-curve.66044795.png\";","module.exports = __webpack_public_path__ + \"static/media/ExampleGraphs.2ef3bb32.png\";","export default {\n  cognito: {\n    REGION: \"eu-west-2\",\n    USER_POOL_ID: \"eu-west-2_kiqr3R2mb\",\n    APP_CLIENT_ID: \"5dkf83sgld69f2nvedggntas11\",\n  },\n};\n","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function (event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value,\n      });\n    },\n  ];\n}\n","export function onError(error) {\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    message = error.message;\n  }\n\n  alert(message);\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignIn({ history }) {\n  const { setLoggedIn, setUserId, setName } = useAppContext();\n  const [validationError, setValidationError] = useState({\n    email: { error: false, message: \"Please enter a valid email.\" },\n    password: { error: false, message: \"Please enter a valid password.\" },\n  });\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n  });\n\n  function clearValidationErrors() {\n    const updatedValidationError = Object.assign({}, validationError);\n    updatedValidationError.email.error = false;\n    updatedValidationError.password.error = false;\n    setValidationError(updatedValidationError);\n  }\n\n  async function handleSignInSubmit(e) {\n    e.preventDefault();\n    clearValidationErrors();\n\n    if (\n      fields.email.length === 0 ||\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(fields.email)\n    ) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.email.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (fields.password.length < 8) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.password.error = true;\n      setValidationError(updatedValidationError);\n    } else {\n      try {\n        await Auth.signIn(fields.email, fields.password);\n        const userInfo = await Auth.currentUserInfo();\n        setLoggedIn(true);\n        setUserId(userInfo.username);\n        setName(userInfo.attributes.name);\n        history.push(\"/grokit-frontend/\");\n      } catch (e) {\n        onError(e);\n      }\n    }\n  }\n  return (\n    <div className=\"forms\">\n      <Form className=\"border\">\n        <h2>Please Sign in</h2>\n        <Form.Group controlId=\"email\">\n          <Form.Label className=\"size\">Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n          {validationError.email.error && (\n            <Form.Text style={{ color: \"red\" }}>\n              {validationError.email.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n          {validationError.password.error && (\n            <Form.Text style={{ color: \"red\" }}>\n              {validationError.password.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <button\n          type=\"submit\"\n          className=\"primaryButton\"\n          onClick={handleSignInSubmit}\n        >\n          Sign In\n        </button>\n\n        <div>\n          <small>\n            Forgot password?{\" \"}\n            <Link to=\"/grokit-frontend/resetpassword\">Reset password</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an{\" \"}\n            <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(SignIn);\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport passwordValidator from \"password-validator\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nconst passwordSchema = new passwordValidator();\npasswordSchema\n  .is()\n  .min(8)\n  .has()\n  .uppercase()\n  .has()\n  .lowercase()\n  .has()\n  .digits()\n  .has()\n  .symbols();\n\nfunction SignUp({ history }) {\n  const [newUser, setNewUser] = useState(null);\n  const [validationError, setValidationError] = useState({\n    name: { error: false, message: \"Please enter a name.\" },\n    email: { error: false, message: \"Please enter a valid email.\" },\n    password: {\n      error: false,\n      message:\n        \"Please enter a valid password. Required: 8 characters, lowercase, uppercase, special characters, numbers.\",\n    },\n    confirmPassword: { error: false, message: \"Passwords do not match.\" },\n  });\n\n  const { setLoggedIn, setUserId, setName } = useAppContext();\n  const [fields, handleFieldChange] = useFormFields({\n    newName: \"\",\n    newEmail: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n  });\n\n  function clearValidationErrors() {\n    const updatedValidationError = Object.assign({}, validationError);\n    updatedValidationError.name.error = false;\n    updatedValidationError.email.error = false;\n    updatedValidationError.password.error = false;\n    updatedValidationError.confirmPassword.error = false;\n    setValidationError(updatedValidationError);\n  }\n\n  async function handleNewUserSubmit(event) {\n    event.preventDefault();\n    clearValidationErrors();\n\n    if (fields.newName.length === 0) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.name.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (\n      fields.newEmail.length === 0 ||\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(fields.email)\n    ) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.email.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (!passwordSchema.validate(fields.newPassword)) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.password.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (fields.newPassword !== fields.confirmPassword) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.confirmPassword.error = true;\n      setValidationError(updatedValidationError);\n    } else {\n      try {\n        const newUser = await Auth.signUp({\n          username: fields.newEmail,\n          password: fields.newPassword,\n          attributes: { name: fields.newName },\n        });\n        setNewUser(newUser);\n      } catch (error) {\n        onError(error);\n      }\n    }\n  }\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    try {\n      await Auth.confirmSignUp(fields.newEmail, fields.confirmationCode);\n      await Auth.signIn(fields.newEmail, fields.newPassword);\n      const userInfo = await Auth.currentUserInfo();\n      const user = {\n        userId: userInfo.username,\n        name: userInfo.attributes.name,\n      };\n      axios\n        .post(\n          \"https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/users\",\n          user\n        )\n        .then((response) => {\n          setUserId(user.userId);\n          setName(user.name);\n          setLoggedIn(true);\n          history.push(\"/grokit-frontend/\");\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    } catch (e) {\n      onError(e);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <div className=\"forms\">\n        <Form onSubmit={handleConfirmationSubmit}>\n          <Form.Group controlId=\"confirmationCode\" bsSize=\"large\">\n            <Form.Label className=\"forms__confirmationTitle\">\n              Confirmation Code\n            </Form.Label>\n            <Form.Text className=\"forms__confirmationText\">\n              We have just sent you a confirmation code, please check your email\n            </Form.Text>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Confirmation Code\"\n              onChange={handleFieldChange}\n              value={fields.confirmationCode}\n            />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n            Verify\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderForm() {\n    return (\n      <div className=\"forms\">\n        <Form className=\"border\">\n          <h2>Create an account</h2>\n          <Form.Group controlId=\"newName\">\n            <Form.Label> Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={fields.newName}\n              onChange={handleFieldChange}\n            />\n            {validationError.name.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.name.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <Form.Group controlId=\"newEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={fields.newEmail}\n              onChange={handleFieldChange}\n            />\n            {validationError.email.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.email.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={fields.newPassword}\n              onChange={handleFieldChange}\n            />\n            {validationError.password.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.password.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={fields.confirmPassword}\n              onChange={handleFieldChange}\n            />\n            {validationError.confirmPassword.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.confirmPassword.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <button\n            type=\"submit\"\n            className=\"primaryButton\"\n            onClick={handleNewUserSubmit}\n          >\n            Sign up\n          </button>\n          <div>\n            <small>\n              Already have an account?{\" \"}\n              <Link to=\"/grokit-frontend/signin\">Sign in</Link>\n            </small>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n  return newUser === null ? renderForm() : renderConfirmationForm();\n}\n\nexport default withRouter(SignUp);\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  const [fields, handleFieldChange] = useFormFields({\n    code: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    try {\n      await Auth.forgotPasswordSubmit(fields.email, fields.code, fields.password);\n      setConfirmed(true);\n    } catch (error) {\n      onError(error);\n    }\n  }\n  function renderRequestCodeForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleSendCodeClick}>\n          <Form.Group bsSize=\"large\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control autoFocus type=\"email\" value={fields.email} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n            Send Confirmation\n          </Button>\n        </Form>\n        <div>\n          <small>\n            Want to try to sign in? <Link to=\"/grokit-frontend/signin\">Sign In</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </div>\n    );\n  }\n  function renderConfirmationForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleConfirmClick}>\n          <Form.Group bsSize=\"large\" controlId=\"code\">\n            <Form.Label>Confirmation Code</Form.Label>\n            <Form.Control autoFocus type=\"tel\" value={fields.code} onChange={handleFieldChange} />\n            <div>Please check your email ({fields.email}) for the confirmation code.</div>\n          </Form.Group>\n          <hr />\n          <Form.Group bsSize=\"large\" controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.password} onChange={handleFieldChange} />\n          </Form.Group>\n          <Form.Group bsSize=\"large\" controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.confirmPassword} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n            Confirm\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderSuccessMessage() {\n    return (\n      <div className=\"success\">\n        <p>Your password has been reset.</p>\n        <p>\n          Click <Link to=\"/signin\">here </Link>to sign in with your new password.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ResetPassword forms\">\n      {!codeSent ? renderRequestCodeForm() : !confirmed ? renderConfirmationForm() : renderSuccessMessage()}\n    </div>\n  );\n}\nexport default ResetPassword;\n","import React, { useState } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction Modal({ title = \"\", status = false, handleClose = () => {}, onSave = () => {} }) {\n  const [project, setProject] = useState({});\n\n  const updateProject = ({ target: { value = \"\", name = \"\" } = {} }) => {\n    setProject({ ...project, [name]: value });\n  };\n\n  const saveChanges = () => {\n    onSave(project);\n  };\n\n  const { name = \"\" } = project;\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id=\"example-modal-sizes-title-sm\">{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label className=\"Modal__label\">\n          <input className=\"Modal__input\" type=\"text\" placeholder=\"Enter project name\" value={name} name=\"name\" onChange={updateProject} />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <button type=\"button\" className=\"secondaryButton darker\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"primaryButton\" onClick={saveChanges} disabled={!name}>\n          Save\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Modal from \"components/CreateNewProject/Modal\";\n\nfunction NewProject({ addProject = () => {} }) {\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (project) => {\n    addProject(project);\n    handleClose();\n  };\n\n  return (\n    <>\n      <div className=\"newProject\" onClick={handleShow}>\n        <button type=\"button\" className=\"primaryButton\">\n          Add New Project +\n        </button>\n      </div>\n      {smShow ? <Modal title=\"Create New Project\" status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n    </>\n  );\n}\n\nexport default NewProject;\n","import React, { useState } from \"react\";\n\nfunction AddSkill({ projectId, addSkill = () => {} }) {\n  const [skill, setSkill] = useState(\"\");\n\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\" && skill.length) {\n      addAndResetSkill();\n    }\n  };\n\n  const modifySkill = ({ target: { value = \"\" } = {} }) => {\n    setSkill(value);\n  };\n\n  const addAndResetSkill = () => {\n    addSkill(projectId, skill);\n    setSkill(\"\");\n  };\n\n  return (\n    <div className=\"addSkill\">\n      <input type=\"text\" placeholder=\"Add New Skill...\" value={skill} onChange={modifySkill} onKeyPress={handleKeyPress} />\n      <span onClick={addAndResetSkill}>+</span>\n    </div>\n  );\n}\n\nexport default AddSkill;\n","import React, { useState } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction SingleInputModal({ \n  startValue = \"\", \n  title = \"\", \n  placeholder = \"\",\n  status = false, \n  handleClose = () => {}, \n  onSave = () => {} }) {\n\n  const [value, setValue] = useState(startValue);\n\n  const saveChanges = () => {\n    onSave(value);\n  };\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label>\n          <input type=\"text\" placeholder={placeholder} value={value} onChange={e => setValue(e.target.value)} />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <Button variant=\"danger\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"success\" onClick={saveChanges} disabled={!value}>\n          Save\n        </Button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default SingleInputModal;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport SingleInputModal from 'components/Modals/SingleInputModal';\n\nfunction EditSkill({ skillId, name, editSkillName = () => {} }) {\n    const [smShow, setSmShow] = useState(false);\n\n    \n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (skillName) => {\n      editSkillName(skillId, skillName);\n      handleClose();\n  }\n\n    return (\n        <>\n        <Button onClick={handleShow}>Edit name</Button>\n        {smShow ? <SingleInputModal title=\"Edit skill name\" startValue={name} placeholder=\"Enter a new skill name\" status={smShow} handleClose={handleClose} onSave={onSave}/> : \"\"}\n        </>\n    );\n}\n\nexport default EditSkill;\n","import React from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport EditSkill from \"components/ProjectList/SkillItem/EditSkill/EditSkill\";\n\nfunction SkillItem({ skillId, name, deleteSkill = () => { }, editSkillName = () => {} }) {\n\n    const handleDeleteSkillButton = () => {\n        if (window.confirm(`Are you sure you wish to delete \"${name}\"`)) {\n            deleteSkill(skillId);\n        }\n    }    \n\n    return (\n        <Row>\n            <p key={skillId}>{name}</p>\n            <Button onClick={handleDeleteSkillButton}>Delete</Button>\n            <EditSkill skillId = {skillId} name={name} editSkillName = {editSkillName} />\n        </Row>\n    );\n}\n\nexport default SkillItem;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport SingleInputModal from 'components/Modals/SingleInputModal';\n\nfunction EditProject({ projectId, name, editProjectName = () => {} }) {\n    const [smShow, setSmShow] = useState(false);\n\n\n    const handleClose = () => setSmShow(false);\n    const handleShow = () => setSmShow(true);\n\n    const onSave = (projectName) => {\n        editProjectName(projectId, projectName);\n        handleClose();\n    }\n\n    return (\n        <>\n            <Button onClick={handleShow}>Edit name</Button>\n            {smShow ? <SingleInputModal title=\"Edit project name\" placeholder = \"Enter new project name\" startValue={name} status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n        </>\n    );\n}\n\nexport default EditProject;\n","import React, { useState } from \"react\";\nimport { Button, Card, Collapse } from \"react-bootstrap\";\nimport AddSkill from \"components/AddSkill/AddSkill\";\nimport SkillItem from \"components/ProjectList/SkillItem/SkillItem\";\nimport EditProject from \"components/ProjectList/ProjectItem/EditProject/EditProject\";\n\nfunction ProjectItem({ \n  project: { projectId, name, skills = [] } = {}, \n  open = true, \n  addSkill = () => {},\n  deleteSkill = () => {}, \n  deleteProject = () => {}, \n  editSkillName = () => {}, \n  editProjectName = () => {} \n}) {\n  \n  const [cardOpen, setCardOpen] = useState(false);\n\n  const handleDeleteProjectButton = () => {\n    if (window.confirm(`Are you sure you wish to delete \"${name}\"? This will delete all associated skills.`)) {\n      deleteProject(projectId);\n    }\n  }\n\n  return (\n    <Card key={projectId} style={{ border: \"2px solid black\" }}>\n      <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open} onClick={() => setCardOpen(!cardOpen)}>\n        <h1>{name}</h1>\n      </Card.Header>\n      <Collapse in={cardOpen}>\n        <Card.Body>\n          <AddSkill projectId={projectId} addSkill={addSkill} />\n          {skills.map(({skillId, name}) => (\n            <SkillItem key={skillId} skillId={skillId} name={name} deleteSkill={deleteSkill} editSkillName={editSkillName}/>\n          ))}\n          <Button onClick={handleDeleteProjectButton}>Delete Project</Button>\n          <EditProject projectId = {projectId} name={name} editProjectName = {editProjectName}/>\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default ProjectItem;\n","import React from \"react\";\n\nimport ProjectItem from \"./ProjectItem/ProjectItem\";\n\nfunction ProjectList({ \n  projects = [], \n  addSkill = () => {}, \n  deleteSkill = () => {},\n  deleteProject = () => {},\n  editSkillName = () => {},\n  editProjectName = () => {} \n}) {\n  return (\n    <>\n      {projects.map((project) => (\n        <ProjectItem\n          key={project.projectId}\n          project={project}\n          addSkill={addSkill}\n          deleteProject={deleteProject}\n          deleteSkill={deleteSkill}\n          editSkillName={editSkillName}\n          editProjectName={editProjectName}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default ProjectList;\n","export const timesTablesProject = { \n    name: \"Times tables\", \n    skills: [\n        {name:\"Two times tables\"}, \n        {name:\"Three times tables\"},\n        {name:\"Four times tables\"},\n        {name:\"Five times tables\"},\n        {name:\"Six times tables\"},\n        {name:\"Seven times tables\"},\n        {name:\"Eight times tables\"},\n        {name:\"Nine times tables\"},\n        {name:\"Ten times tables\"},\n        {name:\"Eleven times tables\"},\n        {name:\"Twelve times tables\"}\n    ]};\n\n    export const javascriptProject = { \n        name: \"Javascript Array Methods\", \n        skills: [\n            {name:\"Map\"}, \n            {name:\"Reduce\"},\n            {name:\"Filter\"},\n            {name:\"ForEach\"}\n        ]};\n\n        export const footballProject = { \n            name: \"Football Skills\", \n            skills: [\n                {name:\"Shooting\"}, \n                {name:\"Goalkeeping\"},\n                {name:\"Dribbling\"},\n                {name:\"Throw ins\"}\n            ]};","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\n\nfunction ExampleSkillItem({ name }) {    \n\n    return (\n        <Row>\n            <p key={name}>{name}</p>\n        </Row>\n    );\n}\n\nexport default ExampleSkillItem;\n","import React, { useState } from \"react\";\nimport { Card, Collapse } from \"react-bootstrap\";\nimport ExampleSkillItem from \"components/ProjectList/SkillItem/ExampleSkillItem\";\n\nfunction ExampleProject({ project: { name, skills = [] } = {}, open = true }) {\n  const [cardOpen, setCardOpen] = useState(false);\n\n  return (\n    <Card className=\"grokitCard\" key={name}>\n      <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open} onClick={() => setCardOpen(!cardOpen)}>\n        <h1>{name}</h1>\n        <div className={`arrow ${cardOpen ? \"open\" : \"\"}`}></div>\n      </Card.Header>\n      <Collapse in={cardOpen}>\n        <Card.Body>\n          {skills.map(({ name }) => (\n            <ExampleSkillItem key={name} name={name} />\n          ))}\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default ExampleProject;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  timesTablesProject,\n  javascriptProject,\n  footballProject,\n} from \"components/ProjectList/ExampleProjects/exampleProjectData\";\nimport ExampleProject from \"components/ProjectList/ExampleProjects/ExampleProject\";\n\nfunction NoProjects({\n  projects = [],\n  open = true,\n  updatePractisedSkill = () => {},\n  addProject = () => {},\n}) {\n  return (\n    <>\n      <div className=\"NoProjects__description\">\n        Welcome to <span className=\"grokitLogo\">GrokIt</span>. Let's get started\n        by adding some projects that you want to Grok. <br />\n        Look at the the example projects below and then click{\" \"}\n        <Link to=\"/grokit-frontend/projects\">here</Link> to start adding your\n        own.\n      </div>\n      <Row>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={timesTablesProject}\n          />\n        </Col>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={javascriptProject}\n          />\n        </Col>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={footballProject}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default NoProjects;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction PractisedToday({ projectName = \"\" }) {\n    return (\n        <Row>{projectName}: Done for today</Row>\n    )\n}\n\nexport default PractisedToday;\n","import React from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction OptionSelectModal({ \n  title = \"\", \n  status = false, \n  handleClose = () => {}, \n  onSave = () => {} }) {\n\n\n  const saveChanges = (difficulty) => {\n    onSave(difficulty);\n  };\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Footer>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"easy\")}>\n          Easy\n        </button>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"medium\")}>\n          Normal\n        </button>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"hard\")}>\n          Hard\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default OptionSelectModal;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport OptionSelectModal from 'components/Modals/OptionSelectModal';\n\nfunction MarkSkillAsPractised({skill={}, updatePractisedSkill = () => {}}) {\n    const [smShow, setSmShow] = useState(false);\n\n    \n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (difficulty) => {\n      console.log(difficulty);\n      updatePractisedSkill(skill,difficulty)\n      handleClose();\n  }\n\n    return (\n        <>\n        <Button onClick={handleShow}>Done</Button>\n        {smShow ? <OptionSelectModal title=\"How did the practice feel?\" status={smShow} handleClose={handleClose} onSave={onSave}/> : \"\"}\n        </>\n    );\n}\n\nexport default MarkSkillAsPractised;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\nimport MarkSkillAsPractised from './MarkSkillAsPractised';\n\n\nfunction Skill({ projectName = \"\", skill={}, updatePractisedSkill = () => { } }) {\n\n    return (\n        <Row>\n            <p>{projectName}: {skill.name}</p>\n            <MarkSkillAsPractised updatePractisedSkill = {updatePractisedSkill} skill={skill}/>\n        </Row>\n    )\n}\n\nexport default Skill;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction NoSkill({ projectName = \"\" }) {\n    return (\n        <Row>{projectName}: No task today</Row>\n    )\n}\n\nexport default NoSkill;\n","import React from 'react';\nimport moment from 'moment';\nimport PractisedToday from './PractisedToday';\nimport Skill from './Skill';\nimport NoSkill from './NoSkill';\n\n\nfunction SkillToDoItem({ datePractised = \"\", projectName = \"\", skillToDo, skill = {}, updatePractisedSkill = () => { } }) {\n    if (moment(datePractised).isSame(moment(), \"day\")) {\n        return (<PractisedToday projectName={projectName} />)\n    }\n    else {\n        if (skillToDo) {\n            return (<Skill projectName={projectName} skill={skill} updatePractisedSkill={updatePractisedSkill} />)\n        }\n        else {\n            return (<NoSkill projectName={projectName} />)\n        }\n    }\n};\n\nexport default SkillToDoItem;\n","import React, { useState } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nfunction Timer({ duration }) {\n  const [playing, setPlaying] = useState(false);\n  const [timerKey, setTimerKey] = useState(1);\n\n  const timerDuration = duration;\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + timerDuration;\n  const remainingTime = endTime - stratTime;\n  const minuteSeconds = 60;\n\n  const getTimeSeconds = (time) => (minuteSeconds - time) | 0;\n  const getTimeMinutes = (time) => (time / minuteSeconds) | 0;\n\n  const renderTime = (dimension, time) => {\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{time}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  };\n\n  const timerProps = {\n    isPlaying: playing,\n    size: 120,\n    strokeWidth: 8,\n    colors: [[\"#193654\"],[\"#6babff\"]]\n  };\n\n  const handleResetClick = () => {\n    setTimerKey(timerKey + 1);\n    setPlaying(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"timer\" key={timerKey}>\n        {/* minutes */}\n        <CountdownCircleTimer\n          onComplete={() => window.alert(\"Time for a break\")}\n          {...timerProps}\n          duration={timerDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) => renderTime(\"minutes\", getTimeMinutes(timerDuration - elapsedTime))}\n        </CountdownCircleTimer>\n        {/* seconds */}\n        <CountdownCircleTimer\n          {...timerProps}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [remainingTime - totalElapsedTime > 0]}\n        >\n          {({ elapsedTime }) => renderTime(\"seconds\", getTimeSeconds(elapsedTime))}\n        </CountdownCircleTimer>\n      </Row>\n      <Row>\n        <Button onClick={() => setPlaying(true)}>Start</Button>\n        <Button onClick={() => setPlaying(false)}>Pause</Button>\n        <Button onClick={handleResetClick}>Reset</Button>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Timer;\n","import React from \"react\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport \"./Message.scss\";\n\nfunction Message() {\n  const { name } = useAppContext();\n\n  return (\n    <div className=\"message\">\n      <p>Hello {name} your skills to practise today are... </p>\n    </div>\n  );\n}\nexport default Message;\n","import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport SkillToDoItem from \"./SkillToDoItem/SkillToDoItem\";\nimport Timer from \"components/Timer/Timer\";\nimport Message from \"components/Message/Message\";\n\nfunction SkillsToDo({\n  projects = [],\n  open = true,\n  updatePractisedSkill = () => {},\n}) {\n  const [showTimer, setShowTimer] = useState(false);\n  const [name] = useState();\n\n  return (\n    <>\n      <Message name={name} />\n      {showTimer ? (\n        <>\n          <button\n            type=\"button\"\n            className=\"primaryButton\"\n            onClick={() => setShowTimer(false)}\n          >\n            Close Pomodoro Timer\n          </button>\n          <Timer duration={1500} />\n        </>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"primaryButton\"\n          onClick={() => setShowTimer(true)}\n        >\n          Show Pomodoro Timer\n        </button>\n      )}\n      <Card style={{ border: \"2px solid black\" }}>\n        <Card.Header\n          className=\"h4\"\n          aria-controls=\"task-item-contents\"\n          aria-expanded={open}\n        >\n          <h1>Skills to practise today</h1>\n        </Card.Header>\n        <Card.Body>\n          {projects &&\n            projects.map(\n              ({ projectId, datePractised, name, skillToDo, skills = [] }) => {\n                if (!skills.length) {\n                  return null;\n                }\n                const skill =\n                  skills.find(({ skillId }) => skillId === skillToDo) || {};\n\n                return (\n                  <SkillToDoItem\n                    key={projectId}\n                    datePractised={datePractised}\n                    projectName={name}\n                    skill={skill}\n                    skillToDo={skillToDo}\n                    updatePractisedSkill={updatePractisedSkill}\n                  />\n                );\n              }\n            )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default SkillsToDo;\n","import React from 'react';\n\nimport NoProjects from 'components/SkillsToDo/NoProjects';\nimport SkillsToDo from './SkillsToDo';\n\nfunction HomePage({ projects = [], open = true, updatePractisedSkill = () => {}, addProject = () => {} }) {\n\n  return (\n  projects.length === 0 ? <NoProjects projects = {projects} addProject={addProject}/> : <SkillsToDo projects={projects} updatePractisedSkill={updatePractisedSkill}/>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nfunction Header({ history }) {\n  const [expanded, setExpanded] = useState(false);\n  const { loggedIn, setLoggedIn } = useAppContext();\n\n  async function handleLogOut() {\n    await Auth.signOut();\n    setLoggedIn(false);\n    history.push(\"/grokit-frontend/\");\n  }\n\n  return (\n    <Navbar className=\"NavBar\" expand=\"sm\" expanded={expanded}>\n      <Navbar.Brand className=\"grokitLogo\">GrokIt</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")} />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav onClick={() => setExpanded(false)}>\n          <Link className=\"px-3\" to=\"/grokit-frontend/\">\n            Home\n          </Link>\n          {loggedIn ? (\n            <>\n            <Link className=\"px-3\" to=\"/grokit-frontend/projects\">\n              Projects\n            </Link>\n            <Link className=\"px-3\" to=\"/grokit-frontend/charts\">\n            Charts\n          </Link>\n          </>\n          ) : (\n            \"\"\n          )}\n        </Nav>\n        <Nav className=\"ml-auto\">\n          {loggedIn ? (\n            <button type=\"button\" className=\"secondaryButton\" onClick={handleLogOut}>\n              Sign Out\n            </button>\n          ) : (\n            <>\n              <button type=\"button\" className=\"secondaryButton\" onClick={() => history.push(\"/grokit-frontend/signin\")}>\n                Sign In\n              </button>\n              <button type=\"button\" className=\"primaryButton\" onClick={() => history.push(\"/grokit-frontend/signup\")}>\n                Sign up\n              </button>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Figure } from \"react-bootstrap\";\nimport forgettingCurve from \"img/the-forgetting-curve.png\";\nimport combattingForgettingCurve from \"img/combating-the-forgetting-curve.png\";\n\nfunction IntroPage() {\n  return (\n    <Container className=\"introPage\">\n      <Row className=\"introPage__introduction\">\n        <Col>\n          <p>\n            Welcome, please click here to <br />\n            <Link to=\"/grokit-frontend/signin\">Sign in</Link> or <Link to=\"/grokit-frontend/signup\">Sign Up</Link>{\" \"}\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>\n            Why <span className=\"grokitLogo\">GrokIt</span>?\n          </h2>\n          <h3 className=\"introPage__quotation\">\n            <i>\n              grok <small>(verb)</small>\n            </i>\n          </h3>\n          <p>to understand completely and intuitively </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12} lg={6}>\n        <Figure>\n        <Figure.Image src={forgettingCurve} width={450} alt=\"The Forgetting Curve\" rounded/>\n        <Figure.Caption>The Forgetting Curve, image from <a href=\"https://www.growthengineering.co.uk/wp-content/uploads/2016/11/the-forgetting-curve.png\">Growth Engineering</a> </Figure.Caption>\n        </Figure>\n          \n          <p>Information is lost from our memory over time if no effort is made to retain it.</p>\n        </Col>\n        <Col xs={12} lg={6}>\n        <Figure>\n        <Figure.Image src={combattingForgettingCurve} width={450} alt=\"Combating the Forgetting Curve\" rounded/>\n        <Figure.Caption>Combating the Forgetting Curve, image from <a href=\"https://www.growthengineering.co.uk/wp-content/uploads/2016/09/combating-the-forgetting-curve.png\">Growth Engineering</a> </Figure.Caption>\n        </Figure>\n          <p>\n            The most effective time to practise a skill or rehearse knowledge is just before you forget it. We will remind you what to work\n            on each day, until you{\" \"}\n            <strong>\n              <span className=\"grokitLogo\">GrokIt</span>\n            </strong>\n            .\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default IntroPage;\n","import moment from 'moment';\n\nfunction generateXYData(practisedData,dateFirstPractised) {\n    let lastData = practisedData[0];\n    let multiplier = 1;\n\n    const simpleData = practisedData.flatMap((data,i) => {      \n      let newData = [];\n      let days = data.day - lastData.day;\n      if (data.lastGap0 !== 0 && data.lastGap1 !== 0) {\n        multiplier = multiplier*data.lastGap0/data.lastGap1;\n      }\n      for (let i=1; i<=days; i++) {\n        let val = 100*Math.exp(-i*multiplier) | 0;\n        newData.push(val);\n      }\n      newData.push(100);\n      lastData = data;      \n      \n      if (i === practisedData.length-1) {\n        let remainingDays = moment().diff(moment(dateFirstPractised),\"days\")-lastData.day;      \n        if (data.lastGap0 !== 0 && data.lastGap1 !== 0) {\n          multiplier = multiplier*data.lastGap0/data.lastGap1;\n        }\n        for (let i = 1; i<=remainingDays; i++) {\n          let val = 100*Math.exp(-i*multiplier) | 0;\n         newData.push(val);\n        }\n      }\n      return newData;\n    })\n    let x = 0;\n    return simpleData.map((data) => {      \n      if (data !== 100) {x++}\n      let result = {x, y:data}\n      return result;\n    });\n}\n\nexport default function generateLineChartData({skillName, dateFirstPractised, practisedData = []}) {\n  let chartDataSeries = {id:skillName};\n  chartDataSeries.data = generateXYData(practisedData, dateFirstPractised);\n  return [chartDataSeries];\n}\n  ","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport generateLineChartData from './generateLineChartData';\n\nfunction LineChart({title = \"\", height = 250, chartData = []}) {\n\n    function CustomTooltip({point: {data: {x, y}}}) {\n        return (\n            <div className = \"linechart__tooltip\">\n                Day: {x} <br />\n                {y === 100 ? \"Practised\" : `Remembered: ${y | 0}%`}\n            </div>\n        )\n    }\n\n    const theme = {\n        fontSize: 14,\n        fontFamily: \"Verdana, Arial, sans-serif\",\n        axis: {\n            legend: {\n                text: {\n                    fontSize: 16,\n                }\n            }\n        }\n    };\n\n    const data = generateLineChartData(chartData);\n\n    return (\n        <div className = \"linechart\" style = {{height}}>\n        <h3> {title}</h3>\n            <ResponsiveLine className=\"graph\"\n                data={data}\n                margin={{ top: 10, right: 30, bottom: 50, left: 60 }}\n                xScale={{\n                    type: \"linear\",\n                    tickValues: 1,\n                    min: 0,\n                }}\n                yScale={{\n                    type: \"linear\",\n                    min: 0\n                }}\n                axisTop={null}\n                axisRight={null}\n                axisLeft={{\n                    legend: \"Remembered\",\n                    legendPosition: \"middle\",\n                    legendOffset: -50\n                }}\n                axisBottom={{\n                    legend: \"Days from first practice\",\n                    legendPosition: \"middle\",\n                    legendOffset: 40\n                }}\n                theme={theme}\n                curve={\"linear\"}\n                colors={{ scheme: \"accent\" }}\n                lineWidth={3}\n                pointSize={5}\n                enableArea={false}\n                enableGridX={true}\n                enableGridY={true}\n                tooltip={CustomTooltip}\n                useMesh={true}\n                enableCrosshair={false}                \n            />\n            </div>\n    );\n}\n\nexport default LineChart;\n","import React from 'react';\nimport { Row, Image } from 'react-bootstrap';\nimport ExampleGraphs from 'img/ExampleGraphs.png';\n\n\nfunction NoChartsDisplay() {\n    return (\n        <Row>\n            <h4>As you start completing skills, charts will display to show your progress, like in the example below.</h4>\n            <Image src={ExampleGraphs}/>\n        </Row>\n    );\n}\n\nexport default NoChartsDisplay;\n","import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport LineChart from \"components/Charts/LineChart\";\nimport NoChartsDisplay from \"components/Charts/NoChartsDisplay\";\n\n\nfunction ChartsPage() {\n    const { userId } = useAppContext();\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n          axios\n            .get(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/linechart?userId=${userId}`)\n            .then((response) => {\n              setChartData(response.data.linechartData);\n            })\n            .catch((error) => {\n              console.log(\"Error fetching data\", error);\n            });\n      },[userId]);\n\n    return (\n        <Container fluid=\"lg\" >\n            {chartData.length === 0 \n            ? <NoChartsDisplay/>\n            : chartData && chartData.map(({projectName, skills = []}) => (\n                <>\n                <Row key = {projectName}>\n                    <h3>{projectName}</h3>\n                    </Row>\n                    <Row>\n                    {skills.map((skill) => (\n                        <Col key={skill.skillId}>\n                        <LineChart chartData = {skill} title = {skill.skillName} height = {300}/>                            \n                        </Col>\n                    ))}\n                </Row>\n                </>\n            ))}\n        </Container>\n    );\n}\n\nexport default ChartsPage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { AppContext } from \"./libs/ContextLib.js\";\nimport SignIn from \"components/Forms/SignIn/SignIn\";\nimport SignUp from \"components/Forms/SignUp/SignUp\";\nimport ResetPassword from \"components/Forms/ResetPassword/ResetPassword\";\nimport NewProject from \"components/CreateNewProject/NewProject\";\nimport ProjectList from \"components/ProjectList/ProjectList\";\nimport HomePage from \"components/SkillsToDo/HomePage\";\nimport NavBar from \"components/NavBar/NavBar\";\nimport IntroPage from \"components/IntroPage/IntroPage\";\nimport ChartsPage from \"components/Charts/ChartsPage\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [name, setName] = useState(); //this is good!\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      setLoggedIn(true);\n      const userInfo = await Auth.currentUserInfo();\n      setUserId(userInfo.username);\n      setName(userInfo.attributes.name); // this is good!\n    } catch (e) {}\n    setIsAuthenticating(false);\n  }\n\n  useEffect(() => {\n    if (userId) {\n      axios\n        .get(\n          `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects?userId=${userId}`\n        )\n        .then((response) => {\n          setProjects(response.data.projects);\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    }\n  }, [userId]);\n\n  const addProject = ({ name = \"\" }) => {\n    const newProject = { name, userId, datePracticed: Date.now() };\n    axios\n      .post(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects`,\n        newProject\n      )\n      .then(({ data: { projects: resProject = [] } = {} }) => {\n        setProjects([...projects, ...resProject]);\n      })\n      .catch((error) => {\n        console.log(\"Error posting project\", error);\n      });\n  };\n\n  const addSkill = (projectId, skillName) => {\n    const newSkill = { name: skillName, projectId: projectId };\n    axios\n      .post(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills`,\n        newSkill\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            if (!project.skills) {\n              return {\n                ...project,\n                skillToDo: response.data.skill.skillId,\n                skills: [response.data.skill],\n              };\n            }\n            return { ...project, skills: [...skills, response.data.skill] };\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error posting skill\", error);\n      });\n  };\n\n  const updatePractisedSkill = (practisedSkill, difficulty) => {\n    const { projectId, skillId } = practisedSkill;\n\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/markAsPractised/${difficulty}`,\n        practisedSkill\n      )\n      .then((response) => {\n        const updatedSkill = response.data.practisedSkill;\n        window.alert(`Great job. You'll see this skill again in about ${updatedSkill.lastGap1} day${updatedSkill.lastGap1 === 1? \"\":\"s\"}.`);\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            project.datePractised = moment().format(\"YYYY-MM-DD\");\n            project.skillToDo = null;\n            skills.map((skill) => {\n              if (skill.skillId === skillId) {\n                skill = updatedSkill;\n              }\n              return skill;\n            });\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  };\n  const deleteSkill = (skillId) => {\n    axios\n      .delete(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          return {\n            ...project,\n            skills: skills.filter((skill) => skill.skillId !== skillId),\n          };\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting skill\", error);\n      });\n  };\n\n  const editSkillName = (skillId, skillName) => {\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`,\n        { name: skillName }\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          skills.map((skill) => {\n            if (skill.skillId === skillId) {\n              skill.name = skillName;\n            }\n            return skill;\n          });\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  const deleteProject = (projectId) => {\n    axios\n      .delete(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`\n      )\n      .then((response) => {\n        const updatedProjects = projects.filter((project) =>\n          project.projectId !== projectId ? project : null\n        );\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting project\");\n      });\n  };\n\n  const editProjectName = (projectId, projectName) => {\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`,\n        { name: projectName }\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          if (project.projectId === projectId) {\n            project.name = projectName;\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  return (\n    !isAuthenticating && (\n      <Router>\n        <AppContext.Provider\n          value={{\n            loggedIn,\n            setLoggedIn,\n            userId,\n            setUserId,\n            name,\n            setName,\n          }}\n        >\n          <NavBar />\n          <Container className=\"App\">\n            <Switch>\n              {!loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <IntroPage />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signup\">\n                    <SignUp />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signin\">\n                    <SignIn />\n                  </Route>\n                  <Route path=\"/grokit-frontend/resetpassword\">\n                    <ResetPassword />\n                  </Route>\n                </>\n              )}\n              {loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <HomePage\n                      projects={projects}\n                      updatePractisedSkill={updatePractisedSkill}\n                      addProject={addProject}\n                    />\n                  </Route>\n                  <Route path=\"/grokit-frontend/projects\">\n                    <NewProject addProject={addProject} />\n                    <ProjectList\n                      projects={projects}\n                      addSkill={addSkill}\n                      deleteSkill={deleteSkill}\n                      deleteProject={deleteProject}\n                      editSkillName={editSkillName}\n                      editProjectName={editProjectName}\n                    />\n                  </Route>\n                  <Route path=\"/grokit-frontend/charts\">\n                    <ChartsPage />\n                  </Route>\n                </>\n              )}\n            </Switch>\n          </Container>\n        </AppContext.Provider>\n      </Router>\n    )\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Amplify } from \"aws-amplify\";\nimport config from \"./config\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nAmplify.configure({\n  Auth: {\n    mandatorySignId: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}