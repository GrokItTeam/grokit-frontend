{"version":3,"sources":["img/the-forgetting-curve.png","img/combating-the-forgetting-curve.png","img/ExampleGraphs.png","config.js","libs/ContextLib.js","components/NavBar/NavBar.js","components/CreateNewProject/Modal.js","components/CreateNewProject/NewProject.js","components/AddSkill/AddSkill.js","components/ProjectList/SkillItem/EditSkill/EditSkill.js","components/ProjectList/SkillItem/SkillItem.js","components/Modals/SingleInputModal.js","components/ProjectList/ProjectItem/ProjectItem.js","components/ProjectList/ProjectList.js","pages/ProjectsPage.js","components/ProjectList/ExampleProjects/exampleProjectData.js","components/ProjectList/SkillItem/ExampleSkillItem.js","components/ProjectList/ExampleProjects/ExampleProject.js","components/SkillsToDo/NoProjects.js","components/SkillsToDo/SkillToDoItem/PractisedToday.js","components/Modals/OptionSelectModal.js","components/SkillsToDo/SkillToDoItem/MarkSkillAsPractised.js","components/SkillsToDo/SkillToDoItem/Skill.js","components/SkillsToDo/SkillToDoItem/NoSkill.js","components/SkillsToDo/SkillToDoItem/SkillToDoItem.js","components/Timer/Timer.js","components/Message/Message.js","components/Schedule/ProjectSchedules.js","components/SkillsToDo/SkillsToDo.js","pages/HomePage.js","pages/IntroPage/IntroPage.js","components/Charts/generateLineChartData.js","components/Charts/LineChart.js","components/Charts/NoChartsDisplay.js","pages/ChartsPage.js","libs/HooksLib.js","libs/ErrorLib.js","components/Forms/SignIn/SignIn.js","components/Forms/SignUp/SignUp.js","components/Forms/ResetPassword/ResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REGION","USER_POOL_ID","APP_CLIENT_ID","AppContext","createContext","useAppContext","useContext","withRouter","history","useState","expanded","setExpanded","loggedIn","setLoggedIn","a","Auth","signOut","push","Navbar","className","expand","Brand","Toggle","aria-controls","onClick","Collapse","id","Nav","to","type","Modal","title","status","handleClose","onSave","project","setProject","name","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","placeholder","value","onChange","target","Footer","disabled","NewProject","addProject","smShow","setSmShow","AddSkill","projectId","addSkill","skill","setSkill","addAndResetSkill","onKeyPress","key","length","EditSkill","skillId","editSkillName","deleteSkill","defaultValue","window","confirm","SkillItem","Row","SingleInputModal","startValue","setValue","e","ProjectItem","skills","open","deleteProject","editProjectName","cardOpen","setCardOpen","Col","xs","md","xl","Card","projectName","aria-expanded","in","map","ProjectList","projects","ProjectsPage","loadingProjects","timesTablesProject","javascriptProject","footballProject","ExampleSkillItem","ExampleProject","NoProjects","updatePractisedSkill","PractisedToday","OptionSelectModal","saveChanges","difficulty","MarkSkillAsPractised","Button","console","log","Skill","NoSkill","SkillToDoItem","datePractised","skillToDo","moment","isSame","Timer","duration","playing","setPlaying","timerKey","setTimerKey","timerDuration","stratTime","Date","now","remainingTime","renderTime","dimension","time","timerProps","isPlaying","strokeWidth","colors","Container","onComplete","alert","initialRemainingTime","elapsedTime","totalElapsedTime","Message","ProjectSchedule","schedule","setSchedule","daysValue","setDaysValue","days","setDays","useEffect","axios","get","add","then","response","data","catch","error","Table","bordered","responsive","colSpan","date","format","SkillsToDo","showTimer","setShowTimer","style","border","find","HomePage","IntroPage","lg","Figure","Image","src","forgettingCurve","width","alt","rounded","Caption","href","combattingForgettingCurve","generateLineChartData","skillName","dateFirstPractised","practisedData","chartDataSeries","lastData","multiplier","simpleData","flatMap","i","newData","day","lastGap0","lastGap1","val","Math","exp","remainingDays","diff","x","y","generateXYData","LineChart","height","chartData","margin","top","right","bottom","left","xScale","tickValues","min","yScale","axisTop","axisRight","axisLeft","legend","legendPosition","legendOffset","axisBottom","theme","fontSize","fontFamily","axis","text","curve","scheme","lineWidth","pointSize","enableArea","enableGridX","enableGridY","tooltip","point","useMesh","enableCrosshair","NoChartsDisplay","ExampleGraphs","ChartsPage","userId","setChartData","loadingChartData","setLoadingChartData","linechartData","fluid","useFormFields","initialState","fields","setValues","event","onError","message","toString","Error","setUserId","setName","email","password","validationError","setValidationError","handleFieldChange","clearValidationErrors","updatedValidationError","Object","assign","preventDefault","test","signIn","currentUserInfo","userInfo","username","attributes","Form","Group","controlId","Label","Control","Text","color","passwordSchema","passwordValidator","is","has","uppercase","lowercase","digits","symbols","newUser","setNewUser","confirmPassword","newName","newEmail","newPassword","confirmationCode","handleNewUserSubmit","validate","signUp","handleConfirmationSubmit","confirmSignUp","user","post","onSubmit","bsSize","block","ResetPassword","code","codeSent","setCodeSent","confirmed","setConfirmed","handleSendCodeClick","forgotPassword","handleConfirmClick","forgotPasswordSubmit","autoFocus","App","isAuthenticating","setIsAuthenticating","setProjects","setLoadingProjects","currentSession","onLoad","newProject","datePracticed","resProject","Provider","NavBar","exact","path","practisedSkill","put","updatedSkill","updatedProjects","newSkill","delete","filter","Boolean","location","hostname","match","Amplify","configure","mandatorySignId","region","config","userPoolId","userPoolWebClientId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7345a04a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the-forgetting-curve.1d0cb6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/combating-the-forgetting-curve.66044795.png\";","module.exports = __webpack_public_path__ + \"static/media/ExampleGraphs.2ef3bb32.png\";","export default {\n  cognito: {\n    REGION: \"eu-west-2\",\n    USER_POOL_ID: \"eu-west-2_kiqr3R2mb\",\n    APP_CLIENT_ID: \"5dkf83sgld69f2nvedggntas11\",\n  },\n};\n","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nfunction Header({ history }) {\n  const [expanded, setExpanded] = useState(false);\n  const { loggedIn, setLoggedIn } = useAppContext();\n\n  async function handleLogOut() {\n    await Auth.signOut();\n    setLoggedIn(false);\n    history.push(\"/grokit-frontend/\");\n  }\n\n  return (\n    <Navbar className=\"NavBar\" expand=\"sm\" expanded={expanded}>\n      <Navbar.Brand className=\"grokitLogo\">GrokIt</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")} />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav onClick={() => setExpanded(false)}>\n          <Link className=\"px-3\" to=\"/grokit-frontend/\">\n            Home\n          </Link>\n          {loggedIn ? (\n            <>\n            <Link className=\"px-3\" to=\"/grokit-frontend/projects\">\n              Projects\n            </Link>\n            <Link className=\"px-3\" to=\"/grokit-frontend/charts\">\n            Charts\n          </Link>\n          </>\n          ) : (\n            \"\"\n          )}\n        </Nav>\n        <Nav className=\"ml-auto\">\n          {loggedIn ? (\n            <button type=\"button\" className=\"secondaryButton\" onClick={handleLogOut}>\n              Sign Out\n            </button>\n          ) : (\n            <>\n              <button type=\"button\" className=\"secondaryButton\" onClick={() => history.push(\"/grokit-frontend/signin\")}>\n                Sign In\n              </button>\n              <button type=\"button\" className=\"primaryButton\" onClick={() => history.push(\"/grokit-frontend/signup\")}>\n                Sign up\n              </button>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default withRouter(Header);\n","import React, { useState } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction Modal({ title = \"\", status = false, handleClose = () => {}, onSave = () => {} }) {\n  const [project, setProject] = useState({});\n\n  const updateProject = ({ target: { value = \"\", name = \"\" } = {} }) => {\n    setProject({ ...project, [name]: value });\n  };\n\n  const saveChanges = () => {\n    onSave(project);\n  };\n\n  const { name = \"\" } = project;\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id=\"example-modal-sizes-title-sm\">{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label className=\"Modal__label\">\n          <input className=\"Modal__input\" type=\"text\" placeholder=\"Enter project name\" value={name} name=\"name\" onChange={updateProject} />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <button type=\"button\" className=\"secondaryButton darker\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"primaryButton\" onClick={saveChanges} disabled={!name}>\n          Save\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Modal from \"components/CreateNewProject/Modal\";\n\nfunction NewProject({ addProject = () => {} }) {\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (project) => {\n    addProject(project);\n    handleClose();\n  };\n\n  return (\n    <>\n      <div className=\"newProject\" onClick={handleShow}>\n        <button type=\"button\" className=\"primaryButton\">\n          Add New Project +\n        </button>\n      </div>\n      {smShow ? <Modal title=\"Create New Project\" status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n    </>\n  );\n}\n\nexport default NewProject;\n","import React, { useState } from \"react\";\n\nfunction AddSkill({ projectId, addSkill = () => {} }) {\n  const [skill, setSkill] = useState(\"\");\n\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\" && skill.length) {\n      addAndResetSkill();\n    }\n  };\n\n  const modifySkill = ({ target: { value = \"\" } = {} }) => {\n    setSkill(value);\n  };\n\n  const addAndResetSkill = () => {\n    addSkill(projectId, skill);\n    setSkill(\"\");\n  };\n\n  return (\n    <div className=\"addSkill row\">\n      <input type=\"text\" placeholder=\"Add New Skill...\" value={skill} onChange={modifySkill} onKeyPress={handleKeyPress} />\n      <p onClick={addAndResetSkill}>+</p>\n    </div>\n  );\n}\n\nexport default AddSkill;\n","import React from \"react\";\n\nfunction EditSkill({ skillId, name, editSkillName = () => {}, deleteSkill = () => {} }) {\n  const delSkill = () => {\n    if (window.confirm(`Are you sure you wish to delete \"${name}\"? This will delete your progress and ${name}'s chart data.`)) {\n      deleteSkill(skillId);\n   }\n  };\n\n  const modifySkill = ({ target: { value = \"\" } = {} }) => {\n    editSkillName(skillId, value);\n  };\n\n  return (\n    <div className=\"skillItem\">\n      <input type=\"text\" defaultValue={name} onChange={modifySkill} />\n      <p onClick={delSkill}>×</p>\n    </div>\n  );\n}\n\nexport default EditSkill;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport EditSkill from \"components/ProjectList/SkillItem/EditSkill/EditSkill\";\n\nfunction SkillItem({ skillId, name, deleteSkill = () => {}, editSkillName = () => {} }) {\n  return (\n    <Row>\n      <EditSkill skillId={skillId} name={name} editSkillName={editSkillName} deleteSkill={deleteSkill} />\n    </Row>\n  );\n}\n\nexport default SkillItem;\n","import React, { useState } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction SingleInputModal({ startValue = \"\", title = \"\", placeholder = \"\", status = false, handleClose = () => {}, onSave = () => {} }) {\n  const [value, setValue] = useState(startValue);\n\n  const saveChanges = () => {\n    onSave(value);\n  };\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label className=\"Modal__label\">\n          <input className=\"Modal__input\" type=\"text\" placeholder={placeholder} value={value} onChange={(e) => setValue(e.target.value)} />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <button type=\"button\" className=\"secondaryButton darker\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"primaryButton\" onClick={saveChanges} disabled={!value}>\n          Save\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default SingleInputModal;\n","import React, { useState } from \"react\";\nimport { Card, Collapse, Col } from \"react-bootstrap\";\nimport AddSkill from \"components/AddSkill/AddSkill\";\nimport SkillItem from \"components/ProjectList/SkillItem/SkillItem\";\nimport SingleInputModal from \"components/Modals/SingleInputModal\";\n\nfunction ProjectItem({\n  project: { projectId, name, skills = [] } = {},\n  open = true,\n  addSkill = () => { },\n  deleteSkill = () => { },\n  deleteProject = () => { },\n  editSkillName = () => { },\n  editProjectName = () => { },\n}) {\n  const [cardOpen, setCardOpen] = useState(false);\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const handleDeleteProjectButton = () => {\n    if (window.confirm(`Are you sure you wish to delete \"${name}\"? This will delete all associated skills.`)) {\n      deleteProject(projectId);\n    }\n  };\n\n  const onSave = (projectName) => {\n    editProjectName(projectId, projectName);\n    handleClose();\n  };\n\n  return (\n    <Col xs={12} md={6} xl={4}>\n      <Card className=\"grokitCard projectItem\" key={projectId}>\n        <Card.Header className=\"h4\">\n          <div className=\"projectItem__modifier\">\n            <h2>✎</h2>\n            <h1>{name}</h1>\n            <button type=\"button\" onClick={handleShow}>\n              ✎\n          </button>\n            {smShow ? (\n              <SingleInputModal\n                title=\"Rename project\"\n                placeholder=\"Enter new project name\"\n                startValue={name}\n                status={smShow}\n                handleClose={handleClose}\n                onSave={onSave}\n              />\n            ) : (\n                \"\"\n              )}\n          </div>\n          <div onClick={() => setCardOpen(!cardOpen)}>\n            <div className={`arrow ${cardOpen ? \"open\" : \"\"}`} aria-controls=\"task-item-contents\" aria-expanded={open}></div>\n          </div>\n        </Card.Header>\n        <Collapse in={cardOpen}>\n          <Card.Body>\n            <AddSkill projectId={projectId} addSkill={addSkill} />\n            {skills.map(({ skillId, name }) => (\n              <SkillItem key={skillId} skillId={skillId} name={name} deleteSkill={deleteSkill} editSkillName={editSkillName} />\n            ))}\n            <button type=\"button\" className=\"secondaryButton\" onClick={handleDeleteProjectButton}>\n              Delete Project\n          </button>\n          </Card.Body>\n        </Collapse>\n      </Card>\n    </Col>\n  );\n}\n\nexport default ProjectItem;\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\n\nimport ProjectItem from \"./ProjectItem/ProjectItem\";\n\nfunction ProjectList({\n  projects = [],\n  addSkill = () => {},\n  deleteSkill = () => {},\n  deleteProject = () => {},\n  editSkillName = () => {},\n  editProjectName = () => {},\n}) {\n  return (\n    <Row className=\"cardContainer\">\n      {projects.map((project) => (\n        <ProjectItem\n          key={project.projectId}\n          project={project}\n          addSkill={addSkill}\n          deleteProject={deleteProject}\n          deleteSkill={deleteSkill}\n          editSkillName={editSkillName}\n          editProjectName={editProjectName}\n        />\n      ))}\n    </Row>\n  );\n}\n\nexport default ProjectList;\n","import React from 'react';\n\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport NewProject from 'components/CreateNewProject/NewProject';\nimport ProjectList from 'components/ProjectList/ProjectList';\n\nfunction ProjectsPage({ projects = [], addProject = () => {}, addSkill = () => {}, deleteSkill = () => {}, deleteProject = () => {}, editSkillName = () => {}, editProjectName = () => {} }) {\n  const { loadingProjects } = useAppContext();\n\n  if (!loadingProjects)  {\n      return (\n          <>\n      <NewProject addProject={addProject} />\n        <ProjectList\n          projects={projects}\n          addSkill={addSkill}\n          deleteSkill={deleteSkill}\n          deleteProject={deleteProject}\n          editSkillName={editSkillName}\n          editProjectName={editProjectName}\n        />\n        </>\n  );}\n  else {\n    return null;\n  }\n}\n\nexport default ProjectsPage;\n\n\n\n","export const timesTablesProject = { \n    name: \"Times tables\", \n    skills: [\n        {name:\"Two times tables\"}, \n        {name:\"Three times tables\"},\n        {name:\"Four times tables\"},\n        {name:\"Five times tables\"},\n        {name:\"Six times tables\"},\n        {name:\"Seven times tables\"},\n        {name:\"Eight times tables\"},\n        {name:\"Nine times tables\"},\n        {name:\"Ten times tables\"},\n        {name:\"Eleven times tables\"},\n        {name:\"Twelve times tables\"}\n    ]};\n\n    export const javascriptProject = { \n        name: \"Javascript Array Methods\", \n        skills: [\n            {name:\"Map\"}, \n            {name:\"Reduce\"},\n            {name:\"Filter\"},\n            {name:\"ForEach\"}\n        ]};\n\n        export const footballProject = { \n            name: \"Football Skills\", \n            skills: [\n                {name:\"Shooting\"}, \n                {name:\"Goalkeeping\"},\n                {name:\"Dribbling\"},\n                {name:\"Throw ins\"}\n            ]};","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\n\nfunction ExampleSkillItem({ name }) {    \n\n    return (\n        <Row>\n            <p key={name}>{name}</p>\n        </Row>\n    );\n}\n\nexport default ExampleSkillItem;\n","import React, { useState } from \"react\";\nimport { Card, Collapse } from \"react-bootstrap\";\nimport ExampleSkillItem from \"components/ProjectList/SkillItem/ExampleSkillItem\";\n\nfunction ExampleProject({ project: { name, skills = [] } = {}, open = true }) {\n  const [cardOpen, setCardOpen] = useState(false);\n\n  return (\n    <Card className=\"grokitCard\" key={name}>\n      <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open} onClick={() => setCardOpen(!cardOpen)}>\n        <h1>{name}</h1>\n        <div className={`arrow ${cardOpen ? \"open\" : \"\"}`}></div>\n      </Card.Header>\n      <Collapse in={cardOpen}>\n        <Card.Body>\n          {skills.map(({ name }) => (\n            <ExampleSkillItem key={name} name={name} />\n          ))}\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default ExampleProject;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  timesTablesProject,\n  javascriptProject,\n  footballProject,\n} from \"components/ProjectList/ExampleProjects/exampleProjectData\";\nimport ExampleProject from \"components/ProjectList/ExampleProjects/ExampleProject\";\n\nfunction NoProjects({\n  projects = [],\n  open = true,\n  updatePractisedSkill = () => {},\n  addProject = () => {},\n}) {\n  return (\n    <>\n      <div className=\"NoProjects__description\">\n        Welcome to <span className=\"grokitLogo\">GrokIt</span>. Let's get started\n        by adding some projects that you want to Grok. <br />\n        Look at the the example projects below and then click{\" \"}\n        <Link to=\"/grokit-frontend/projects\">here</Link> to start adding your\n        own.\n      </div>\n      <Row>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={timesTablesProject}\n          />\n        </Col>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={javascriptProject}\n          />\n        </Col>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={footballProject}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default NoProjects;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction PractisedToday({ projectName = \"\" }) {\n    return (\n        <Row>{projectName}: Done for today</Row>\n    )\n}\n\nexport default PractisedToday;\n","import React from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction OptionSelectModal({ \n  title = \"\", \n  status = false, \n  handleClose = () => {}, \n  onSave = () => {} }) {\n\n\n  const saveChanges = (difficulty) => {\n    onSave(difficulty);\n  };\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Footer>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"easy\")}>\n          Easy\n        </button>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"medium\")}>\n          Normal\n        </button>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"hard\")}>\n          Hard\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default OptionSelectModal;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport OptionSelectModal from 'components/Modals/OptionSelectModal';\n\nfunction MarkSkillAsPractised({skill={}, updatePractisedSkill = () => {}}) {\n    const [smShow, setSmShow] = useState(false);\n\n    \n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (difficulty) => {\n      console.log(difficulty);\n      updatePractisedSkill(skill,difficulty)\n      handleClose();\n  }\n\n    return (\n        <>\n        <Button onClick={handleShow}>Done</Button>\n        {smShow ? <OptionSelectModal title=\"How did the practice feel?\" status={smShow} handleClose={handleClose} onSave={onSave}/> : \"\"}\n        </>\n    );\n}\n\nexport default MarkSkillAsPractised;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\nimport MarkSkillAsPractised from './MarkSkillAsPractised';\n\n\nfunction Skill({ projectName = \"\", skill={}, updatePractisedSkill = () => { } }) {\n\n    return (\n        <Row>\n            <p>{projectName}: {skill.name}</p>\n            <MarkSkillAsPractised updatePractisedSkill = {updatePractisedSkill} skill={skill}/>\n        </Row>\n    )\n}\n\nexport default Skill;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction NoSkill({ projectName = \"\" }) {\n    return (\n        <Row>{projectName}: No task today</Row>\n    )\n}\n\nexport default NoSkill;\n","import React from 'react';\nimport moment from 'moment';\nimport PractisedToday from './PractisedToday';\nimport Skill from './Skill';\nimport NoSkill from './NoSkill';\n\n\nfunction SkillToDoItem({ datePractised = \"\", projectName = \"\", skillToDo, skill = {}, updatePractisedSkill = () => { } }) {\n    if (moment(datePractised).isSame(moment(), \"day\")) {\n        return (<PractisedToday projectName={projectName} />)\n    }\n    else {\n        if (skillToDo) {\n            return (<Skill projectName={projectName} skill={skill} updatePractisedSkill={updatePractisedSkill} />)\n        }\n        else {\n            return (<NoSkill projectName={projectName} />)\n        }\n    }\n};\n\nexport default SkillToDoItem;\n","import React, { useState } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nfunction Timer({ duration }) {\n  const [playing, setPlaying] = useState(false);\n  const [timerKey, setTimerKey] = useState(1);\n\n  const timerDuration = duration;\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + timerDuration;\n  const remainingTime = endTime - stratTime;\n  const minuteSeconds = 60;\n\n  const getTimeSeconds = (time) => (minuteSeconds - time) | 0;\n  const getTimeMinutes = (time) => (time / minuteSeconds) | 0;\n\n  const renderTime = (dimension, time) => {\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{time}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  };\n\n  const timerProps = {\n    isPlaying: playing,\n    size: 120,\n    strokeWidth: 8,\n    colors: [[\"#193654\"],[\"#6babff\"]]\n  };\n\n  const handleResetClick = () => {\n    setTimerKey(timerKey + 1);\n    setPlaying(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"timer\" key={timerKey}>\n        {/* minutes */}\n        <CountdownCircleTimer\n          onComplete={() => window.alert(\"Time for a break\")}\n          {...timerProps}\n          duration={timerDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) => renderTime(\"minutes\", getTimeMinutes(timerDuration - elapsedTime))}\n        </CountdownCircleTimer>\n        {/* seconds */}\n        <CountdownCircleTimer\n          {...timerProps}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [remainingTime - totalElapsedTime > 0]}\n        >\n          {({ elapsedTime }) => renderTime(\"seconds\", getTimeSeconds(elapsedTime))}\n        </CountdownCircleTimer>\n      </Row>\n      <Row>\n        <Button onClick={() => setPlaying(true)}>Start</Button>\n        <Button onClick={() => setPlaying(false)}>Pause</Button>\n        <Button onClick={handleResetClick}>Reset</Button>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Timer;\n","import React from \"react\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nfunction Message() {\n  const { name } = useAppContext();\n\n  return (\n    <div className=\"message\">\n      <p>Hello {name} your skills to practise today are... </p>\n    </div>\n  );\n}\nexport default Message;\n","import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\n\n\nfunction ProjectSchedule({ name = \"\", projectId = \"\", datePractised = \"\" }) {\n    const [schedule, setSchedule] = useState([]);\n    const [daysValue, setDaysValue] = useState(7);\n    const [days, setDays] = useState(7);\n\n    useEffect(() => {\n        axios\n            .get(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/schedule/${projectId}/${datePractised}?endDate=${moment().add(days - 1, \"days\")}`)\n            .then((response) => {\n                setSchedule(response.data.schedule);\n            })\n            .catch((error) => {\n                console.log(\"Error fetching data\", error);\n            });\n    }, [projectId, days, datePractised]);\n\n    function changeDaysShown(e) {\n        setDays(daysValue);\n    }\n\n    return (\n        <>\n            <p>Choose number of days to show the predicted schedule for.</p>\n            <div className=\"projectSchedule\">\n                <input type=\"number\" value={daysValue} onChange={e => setDaysValue(e.target.value)} />\n                <p className=\"simpleButton\" onClick={changeDaysShown}>✓</p>\n            </div>\n            <Table bordered size=\"sm\" responsive>\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">{name}</th>\n                    </tr>\n                </thead>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Skill</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {schedule.map(({ date, skill }) => (\n                        <tr key={date}>\n                            <td>{moment(date).format(\"DD MMM YYYY\")}</td>\n                            <td>{skill}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default ProjectSchedule;\n","import React, { useState } from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\n\nimport SkillToDoItem from \"./SkillToDoItem/SkillToDoItem\";\nimport Timer from \"components/Timer/Timer\";\nimport Message from \"components/Message/Message\";\nimport ProjectSchedule from \"components/Schedule/ProjectSchedules\";\n\nfunction SkillsToDo({ projects = [], open = true, updatePractisedSkill = () => { } }) {\n  const [showTimer, setShowTimer] = useState(false);\n  const [name] = useState();\n\n  return (\n    <>\n      <Message name={name} />\n      {showTimer ? (\n        <>\n          <button type=\"button\" className=\"primaryButton\" onClick={() => setShowTimer(false)}>\n            Close Pomodoro Timer\n          </button>\n          <Timer duration={1500} />\n        </>\n      ) : (\n          <button type=\"button\" className=\"primaryButton\" onClick={() => setShowTimer(true)}>\n            Show Pomodoro Timer\n          </button>\n        )}\n      <Card style={{ border: \"2px solid black\" }}>\n        <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open}>\n          <h1>Skills to practise today</h1>\n        </Card.Header>\n        <Card.Body>\n          {projects &&\n            projects.map(({ projectId, datePractised, name, skillToDo, skills = [] }) => {\n              if (!skills.length) {\n                return null;\n              }\n              const skill = skills.find(({ skillId }) => skillId === skillToDo) || {};\n\n              return (\n                <SkillToDoItem\n                  key={projectId}\n                  datePractised={datePractised}\n                  projectName={name}\n                  skill={skill}\n                  skillToDo={skillToDo}\n                  updatePractisedSkill={updatePractisedSkill}\n                />\n              );\n            })}\n        </Card.Body>\n      </Card>\n      <Row>\n        <Col>\n          <p>Below you can see the predicted schedule for each of your projects. \n            <br/>It is likely to change if you add or remove skills, or rate the difficulty of practise as easy or hard.</p>\n        </Col>\n      </Row>\n      <Row>\n        {projects.map(({ projectId, name, datePractised }) => (\n          <Col xs={12} md={6} xl={3}>\n            <ProjectSchedule key={projectId} projectId={projectId} name={name} datePractised={datePractised} />\n          </Col>\n        ))}\n      </Row>\n\n    </>\n  );\n}\n\nexport default SkillsToDo;\n","import React from 'react';\n\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport NoProjects from 'components/SkillsToDo/NoProjects';\nimport SkillsToDo from 'components/SkillsToDo/SkillsToDo';\n\nfunction HomePage({ projects = [], open = true, updatePractisedSkill = () => {}, addProject = () => {} }) {\n  const { loadingProjects } = useAppContext();\n\n  if (!loadingProjects)  {return (\n  projects.length === 0 ? <NoProjects projects = {projects} addProject={addProject}/> : <SkillsToDo projects={projects} updatePractisedSkill={updatePractisedSkill}/>\n  );}\n  else {\n    return null;\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Figure } from \"react-bootstrap\";\nimport forgettingCurve from \"img/the-forgetting-curve.png\";\nimport combattingForgettingCurve from \"img/combating-the-forgetting-curve.png\";\n\nfunction IntroPage() {\n  return (\n    <Container className=\"introPage\">\n      <Row className=\"introPage__introduction\">\n        <Col>\n          <p>\n            Welcome, please click here to <br />\n            <Link to=\"/grokit-frontend/signin\">Sign in</Link> or <Link to=\"/grokit-frontend/signup\">Sign Up</Link>{\" \"}\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>\n            Why <span className=\"grokitLogo\">GrokIt</span>?\n          </h2>\n          <h3 className=\"introPage__quotation\">\n            <i>\n              grok <small>(verb)</small>\n            </i>\n          </h3>\n          <p>to understand completely and intuitively </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12} lg={6}>\n        <Figure>\n        <Figure.Image src={forgettingCurve} width={450} alt=\"The Forgetting Curve\" rounded/>\n        <Figure.Caption>The Forgetting Curve, image from <a href=\"https://www.growthengineering.co.uk/wp-content/uploads/2016/11/the-forgetting-curve.png\">Growth Engineering</a> </Figure.Caption>\n        </Figure>\n          \n          <p>Information is lost from our memory over time if no effort is made to retain it.</p>\n        </Col>\n        <Col xs={12} lg={6}>\n        <Figure>\n        <Figure.Image src={combattingForgettingCurve} width={450} alt=\"Combating the Forgetting Curve\" rounded/>\n        <Figure.Caption>Combating the Forgetting Curve, image from <a href=\"https://www.growthengineering.co.uk/wp-content/uploads/2016/09/combating-the-forgetting-curve.png\">Growth Engineering</a> </Figure.Caption>\n        </Figure>\n          <p>\n            The most effective time to practise a skill or rehearse knowledge is just before you forget it. We will remind you what to work\n            on each day, until you{\" \"}\n            <strong>\n              <span className=\"grokitLogo\">GrokIt</span>\n            </strong>\n            .\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default IntroPage;\n","import moment from 'moment';\n\nfunction generateXYData(practisedData,dateFirstPractised) {\n    let lastData = practisedData[0];\n    let multiplier = 1;\n\n    const simpleData = practisedData.flatMap((data,i) => {      \n      let newData = [];\n      let days = data.day - lastData.day;\n      if (data.lastGap0 !== 0 && data.lastGap1 !== 0) {\n        multiplier = multiplier*data.lastGap0/data.lastGap1;\n      }\n      for (let i=1; i<=days; i++) {\n        let val = 100*Math.exp(-i*multiplier) | 0;\n        newData.push(val);\n      }\n      newData.push(100);\n      lastData = data;      \n      \n      if (i === practisedData.length-1) {\n        let remainingDays = moment().diff(moment(dateFirstPractised),\"days\")-lastData.day;      \n        if (data.lastGap0 !== 0 && data.lastGap1 !== 0) {\n          multiplier = multiplier*data.lastGap0/data.lastGap1;\n        }\n        for (let i = 1; i<=remainingDays; i++) {\n          let val = 100*Math.exp(-i*multiplier) | 0;\n         newData.push(val);\n        }\n      }\n      return newData;\n    })\n    let x = 0;\n    return simpleData.map((data) => {      \n      if (data !== 100) {x++}\n      let result = {x, y:data}\n      return result;\n    });\n}\n\nexport default function generateLineChartData({skillName, dateFirstPractised, practisedData = []}) {\n  let chartDataSeries = {id:skillName};\n  chartDataSeries.data = generateXYData(practisedData, dateFirstPractised);\n  return [chartDataSeries];\n}\n  ","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport generateLineChartData from './generateLineChartData';\n\nfunction LineChart({title = \"\", height = 250, chartData = []}) {\n\n    function CustomTooltip({point: {data: {x, y}}}) {\n        return (\n            <div className = \"linechart__tooltip\">\n                Day: {x} <br />\n                {y === 100 ? \"Practised\" : `Remembered: ${y | 0}%`}\n            </div>\n        )\n    }\n\n    const theme = {\n        fontSize: 14,\n        fontFamily: \"Verdana, Arial, sans-serif\",\n        axis: {\n            legend: {\n                text: {\n                    fontSize: 16,\n                }\n            }\n        }\n    };\n\n    const data = generateLineChartData(chartData);\n\n    return (\n        <div className = \"linechart\" style = {{height}}>\n        <h3> {title}</h3>\n            <ResponsiveLine className=\"graph\"\n                data={data}\n                margin={{ top: 10, right: 30, bottom: 50, left: 60 }}\n                xScale={{\n                    type: \"linear\",\n                    tickValues: 1,\n                    min: 0,\n                }}\n                yScale={{\n                    type: \"linear\",\n                    min: 0\n                }}\n                axisTop={null}\n                axisRight={null}\n                axisLeft={{\n                    legend: \"Remembered\",\n                    legendPosition: \"middle\",\n                    legendOffset: -50\n                }}\n                axisBottom={{\n                    legend: \"Days from first practice\",\n                    legendPosition: \"middle\",\n                    legendOffset: 40\n                }}\n                theme={theme}\n                curve={\"linear\"}\n                colors={{ scheme: \"accent\" }}\n                lineWidth={3}\n                pointSize={5}\n                enableArea={false}\n                enableGridX={true}\n                enableGridY={true}\n                tooltip={CustomTooltip}\n                useMesh={true}\n                enableCrosshair={false}                \n            />\n            </div>\n    );\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport { Row, Image } from \"react-bootstrap\";\nimport ExampleGraphs from \"img/ExampleGraphs.png\";\n\nfunction NoChartsDisplay() {\n  return (\n    <Row>\n      <h4 className=\"noChartsDisplay__title\">\n        As you start completing skills, charts will display to show your progress, like in the example below.\n      </h4>\n      <Image src={ExampleGraphs} />\n    </Row>\n  );\n}\n\nexport default NoChartsDisplay;\n","import React, {useEffect, useState} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport LineChart from \"components/Charts/LineChart\";\nimport NoChartsDisplay from \"components/Charts/NoChartsDisplay\";\n\n\nfunction ChartsPage() {\n    const { userId } = useAppContext();\n    const [chartData, setChartData] = useState([]);\n    const [loadingChartData, setLoadingChartData] = useState(true);\n\n    useEffect(() => {        \n      setLoadingChartData(true);\n          axios\n            .get(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/linechart?userId=${userId}`)\n            .then((response) => {\n              setChartData(response.data.linechartData);\n              setLoadingChartData(false);\n            })\n            .catch((error) => {\n              console.log(\"Error fetching data\", error);\n            });\n      },[userId]);\n\n    if (!loadingChartData) {\n      return (\n        <Container fluid=\"lg\" >\n            {chartData.length === 0 \n            ? <NoChartsDisplay/>\n            : chartData && chartData.map(({projectName, skills = []}) => (\n                <>\n                <Row key = {projectName}>\n                    <h3>{projectName}</h3>\n                    </Row>\n                    <Row>\n                    {skills.map((skill) => (\n                        <Col key={skill.skillId}>\n                        <LineChart chartData = {skill} title = {skill.skillName} height = {300}/>                            \n                        </Col>\n                    ))}\n                </Row>\n                </>\n            ))}\n        </Container>\n    );\n    }\n    else {\n      return null;\n    }\n\n    \n}\n\nexport default ChartsPage;\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function (event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value,\n      });\n    },\n  ];\n}\n","export function onError(error) {\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    message = error.message;\n  }\n\n  alert(message);\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignIn({ history }) {\n  const { setLoggedIn, setUserId, setName } = useAppContext();\n  const [validationError, setValidationError] = useState({\n    email: { error: false, message: \"Please enter a valid email.\" },\n    password: { error: false, message: \"Please enter a valid password.\" },\n  });\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n  });\n\n  function clearValidationErrors() {\n    const updatedValidationError = Object.assign({}, validationError);\n    updatedValidationError.email.error = false;\n    updatedValidationError.password.error = false;\n    setValidationError(updatedValidationError);\n  }\n\n  async function handleSignInSubmit(e) {\n    e.preventDefault();\n    clearValidationErrors();\n\n    if (\n      fields.email.length === 0 ||\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(fields.email)\n    ) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.email.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (fields.password.length < 8) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.password.error = true;\n      setValidationError(updatedValidationError);\n    } else {\n      try {\n        await Auth.signIn(fields.email, fields.password);\n        const userInfo = await Auth.currentUserInfo();\n        setLoggedIn(true);\n        setUserId(userInfo.username);\n        setName(userInfo.attributes.name);\n        history.push(\"/grokit-frontend/\");\n      } catch (e) {\n        onError(e);\n      }\n    }\n  }\n  return (\n    <div className=\"forms\">\n      <Form className=\"border\">\n        <h2>Please Sign in</h2>\n        <Form.Group controlId=\"email\">\n          <Form.Label className=\"size\">Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n          {validationError.email.error && (\n            <Form.Text style={{ color: \"red\" }}>\n              {validationError.email.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n          {validationError.password.error && (\n            <Form.Text style={{ color: \"red\" }}>\n              {validationError.password.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <button\n          type=\"submit\"\n          className=\"primaryButton\"\n          onClick={handleSignInSubmit}\n        >\n          Sign In\n        </button>\n\n        <div>\n          <small>\n            Forgot password?{\" \"}\n            <Link to=\"/grokit-frontend/resetpassword\">Reset password</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an{\" \"}\n            <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(SignIn);\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport passwordValidator from \"password-validator\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nconst passwordSchema = new passwordValidator();\npasswordSchema\n  .is()\n  .min(8)\n  .has()\n  .uppercase()\n  .has()\n  .lowercase()\n  .has()\n  .digits()\n  .has()\n  .symbols();\n\nfunction SignUp({ history }) {\n  const [newUser, setNewUser] = useState(null);\n  const [validationError, setValidationError] = useState({\n    name: { error: false, message: \"Please enter a name.\" },\n    email: { error: false, message: \"Please enter a valid email.\" },\n    password: {\n      error: false,\n      message:\n        \"Please enter a valid password. Required: 8 characters, lowercase, uppercase, special characters, numbers.\",\n    },\n    confirmPassword: { error: false, message: \"Passwords do not match.\" },\n  });\n\n  const { setLoggedIn, setUserId, setName } = useAppContext();\n  const [fields, handleFieldChange] = useFormFields({\n    newName: \"\",\n    newEmail: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n  });\n\n  function clearValidationErrors() {\n    const updatedValidationError = Object.assign({}, validationError);\n    updatedValidationError.name.error = false;\n    updatedValidationError.email.error = false;\n    updatedValidationError.password.error = false;\n    updatedValidationError.confirmPassword.error = false;\n    setValidationError(updatedValidationError);\n  }\n\n  async function handleNewUserSubmit(event) {\n    event.preventDefault();\n    clearValidationErrors();\n\n    if (fields.newName.length === 0) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.name.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (\n      fields.newEmail.length === 0 ||\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(fields.email)\n    ) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.email.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (!passwordSchema.validate(fields.newPassword)) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.password.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (fields.newPassword !== fields.confirmPassword) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.confirmPassword.error = true;\n      setValidationError(updatedValidationError);\n    } else {\n      try {\n        const newUser = await Auth.signUp({\n          username: fields.newEmail,\n          password: fields.newPassword,\n          attributes: { name: fields.newName },\n        });\n        setNewUser(newUser);\n      } catch (error) {\n        onError(error);\n      }\n    }\n  }\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    try {\n      await Auth.confirmSignUp(fields.newEmail, fields.confirmationCode);\n      await Auth.signIn(fields.newEmail, fields.newPassword);\n      const userInfo = await Auth.currentUserInfo();\n      const user = {\n        userId: userInfo.username,\n        name: userInfo.attributes.name,\n      };\n      axios\n        .post(\n          \"https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/users\",\n          user\n        )\n        .then((response) => {\n          setUserId(user.userId);\n          setName(user.name);\n          setLoggedIn(true);\n          history.push(\"/grokit-frontend/\");\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    } catch (e) {\n      onError(e);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <div className=\"forms\">\n        <Form onSubmit={handleConfirmationSubmit}>\n          <Form.Group controlId=\"confirmationCode\" bsSize=\"large\">\n            <Form.Label className=\"forms__confirmationTitle\">\n              Confirmation Code\n            </Form.Label>\n            <Form.Text className=\"forms__confirmationText\">\n              We have just sent you a confirmation code, please check your email\n            </Form.Text>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Confirmation Code\"\n              onChange={handleFieldChange}\n              value={fields.confirmationCode}\n            />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n            Verify\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderForm() {\n    return (\n      <div className=\"forms\">\n        <Form className=\"border\">\n          <h2>Create an account</h2>\n          <Form.Group controlId=\"newName\">\n            <Form.Label> Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={fields.newName}\n              onChange={handleFieldChange}\n            />\n            {validationError.name.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.name.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <Form.Group controlId=\"newEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={fields.newEmail}\n              onChange={handleFieldChange}\n            />\n            {validationError.email.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.email.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={fields.newPassword}\n              onChange={handleFieldChange}\n            />\n            {validationError.password.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.password.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={fields.confirmPassword}\n              onChange={handleFieldChange}\n            />\n            {validationError.confirmPassword.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.confirmPassword.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <button\n            type=\"submit\"\n            className=\"primaryButton\"\n            onClick={handleNewUserSubmit}\n          >\n            Sign up\n          </button>\n          <div>\n            <small>\n              Already have an account?{\" \"}\n              <Link to=\"/grokit-frontend/signin\">Sign in</Link>\n            </small>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n  return newUser === null ? renderForm() : renderConfirmationForm();\n}\n\nexport default withRouter(SignUp);\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  const [fields, handleFieldChange] = useFormFields({\n    code: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    try {\n      await Auth.forgotPasswordSubmit(fields.email, fields.code, fields.password);\n      setConfirmed(true);\n    } catch (error) {\n      onError(error);\n    }\n  }\n  function renderRequestCodeForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleSendCodeClick}>\n          <Form.Group bsSize=\"large\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control autoFocus type=\"email\" value={fields.email} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n            Send Confirmation\n          </Button>\n        </Form>\n        <div>\n          <small>\n            Want to try to sign in? <Link to=\"/grokit-frontend/signin\">Sign In</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </div>\n    );\n  }\n  function renderConfirmationForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleConfirmClick}>\n          <Form.Group bsSize=\"large\" controlId=\"code\">\n            <Form.Label>Confirmation Code</Form.Label>\n            <Form.Control autoFocus type=\"tel\" value={fields.code} onChange={handleFieldChange} />\n            <div>Please check your email ({fields.email}) for the confirmation code.</div>\n          </Form.Group>\n          <hr />\n          <Form.Group bsSize=\"large\" controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.password} onChange={handleFieldChange} />\n          </Form.Group>\n          <Form.Group bsSize=\"large\" controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.confirmPassword} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n            Confirm\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderSuccessMessage() {\n    return (\n      <div className=\"success\">\n        <p>Your password has been reset.</p>\n        <p>\n          Click <Link to=\"/signin\">here </Link>to sign in with your new password.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ResetPassword forms\">\n      {!codeSent ? renderRequestCodeForm() : !confirmed ? renderConfirmationForm() : renderSuccessMessage()}\n    </div>\n  );\n}\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\n\nimport { AppContext } from \"./libs/ContextLib.js\";\n\nimport NavBar from \"components/NavBar/NavBar\";\nimport ProjectsPage from \"pages/ProjectsPage\";\nimport HomePage from \"pages/HomePage\";\nimport IntroPage from \"pages/IntroPage/IntroPage\";\nimport ChartsPage from \"pages/ChartsPage\";\nimport SignIn from \"components/Forms/SignIn/SignIn\";\nimport SignUp from \"components/Forms/SignUp/SignUp\";\nimport ResetPassword from \"components/Forms/ResetPassword/ResetPassword\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [name, setName] = useState(); //this is good!\n  const [projects, setProjects] = useState([]);\n  const [loadingProjects, setLoadingProjects] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      setLoggedIn(true);\n      const userInfo = await Auth.currentUserInfo();\n      setUserId(userInfo.username);\n      setName(userInfo.attributes.name); // this is good!\n    } catch (e) {}\n    setIsAuthenticating(false);\n  }\n\n  useEffect(() => {\n    if (userId) {\n      setLoadingProjects(true);\n      axios\n        .get(\n          `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects?userId=${userId}`\n        )\n        .then((response) => {\n          setProjects(response.data.projects);\n          setLoadingProjects(false);\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    }\n  }, [userId]);\n\n  const addProject = ({ name = \"\" }) => {\n    const newProject = { name, userId, datePracticed: Date.now() };\n    axios\n      .post(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects`,\n        newProject\n      )\n      .then(({ data: { projects: resProject = [] } = {} }) => {\n        setProjects([...projects, ...resProject]);\n      })\n      .catch((error) => {\n        console.log(\"Error posting project\", error);\n      });\n  };\n\n  const addSkill = (projectId, skillName) => {\n    const newSkill = { name: skillName, projectId: projectId };\n    axios\n      .post(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills`,\n        newSkill\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            if (!project.skills) {\n              return {\n                ...project,\n                skillToDo: response.data.skill.skillId,\n                skills: [response.data.skill],\n              };\n            }\n            return { ...project, skills: [...skills, response.data.skill] };\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error posting skill\", error);\n      });\n  };\n\n  const updatePractisedSkill = (practisedSkill, difficulty) => {\n    const { projectId, skillId } = practisedSkill;\n\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/markAsPractised/${difficulty}`,\n        practisedSkill\n      )\n      .then((response) => {\n        const updatedSkill = response.data.practisedSkill;\n        window.alert(`Great job. You'll see this skill again in about ${updatedSkill.lastGap1} day${updatedSkill.lastGap1 === 1? \"\":\"s\"}.`);\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            project.datePractised = moment().format(\"YYYY-MM-DD\");\n            project.skillToDo = null;\n            skills.map((skill) => {\n              if (skill.skillId === skillId) {\n                skill = updatedSkill;\n              }\n              return skill;\n            });\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  };\n  const deleteSkill = (skillId) => {\n    axios\n      .delete(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          return {\n            ...project,\n            skills: skills.filter((skill) => skill.skillId !== skillId),\n          };\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting skill\", error);\n      });\n  };\n\n  const editSkillName = (skillId, skillName) => {\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`,\n        { name: skillName }\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          skills.map((skill) => {\n            if (skill.skillId === skillId) {\n              skill.name = skillName;\n            }\n            return skill;\n          });\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  const deleteProject = (projectId) => {\n    axios\n      .delete(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`\n      )\n      .then((response) => {\n        const updatedProjects = projects.filter((project) =>\n          project.projectId !== projectId ? project : null\n        );\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting project\");\n      });\n  };\n\n  const editProjectName = (projectId, projectName) => {\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`,\n        { name: projectName }\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          if (project.projectId === projectId) {\n            project.name = projectName;\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  return (\n    !isAuthenticating && (\n      <Router>\n        <AppContext.Provider\n          value={{\n            loggedIn,\n            setLoggedIn,\n            userId,\n            setUserId,\n            name,\n            setName,\n            loadingProjects,\n          }}\n        >\n          <NavBar />\n          <Container className=\"App\">\n            <Switch>\n              {!loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <IntroPage />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signup\">\n                    <SignUp />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signin\">\n                    <SignIn />\n                  </Route>\n                  <Route path=\"/grokit-frontend/resetpassword\">\n                    <ResetPassword />\n                  </Route>\n                </>\n              )}\n              {loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <HomePage\n                      projects={projects}\n                      updatePractisedSkill={updatePractisedSkill}\n                      addProject={addProject}\n                    />\n                  </Route>\n                  <Route path=\"/grokit-frontend/projects\">\n                    <ProjectsPage \n                      addProject={addProject}\n                      projects={projects}\n                      addSkill={addSkill}\n                      deleteSkill={deleteSkill}\n                      deleteProject={deleteProject}\n                      editSkillName={editSkillName}\n                      editProjectName={editProjectName}\n                      />\n                  </Route>\n                  <Route path=\"/grokit-frontend/charts\">\n                    <ChartsPage />\n                  </Route>\n                </>\n              )}\n            </Switch>\n          </Container>\n        </AppContext.Provider>\n      </Router>\n    )\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Amplify } from \"aws-amplify\";\nimport config from \"./config\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nAmplify.configure({\n  Auth: {\n    mandatorySignId: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}