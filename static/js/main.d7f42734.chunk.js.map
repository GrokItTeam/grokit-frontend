{"version":3,"sources":["img/the-forgetting-curve.png","img/combating-the-forgetting-curve.png","img/SevenTimesTables.png","img/ThreeTimesTables.png","config.js","libs/ContextLib.js","components/NavBar/NavBar.js","components/CreateNewProject/Modal.js","components/CreateNewProject/NewProject.js","components/AddSkill/AddSkill.js","components/ProjectList/SkillItem/EditSkill/EditSkill.js","utilities/useDebounce.js","components/ProjectList/SkillItem/SkillItem.js","components/Modals/SingleInputModal.js","components/ProjectList/ProjectItem/ProjectItem.js","components/ProjectList/ProjectList.js","pages/ProjectsPage.js","components/ProjectList/ExampleProjects/exampleProjectData.js","components/ProjectList/SkillItem/ExampleSkillItem.js","components/ProjectList/ExampleProjects/ExampleProject.js","components/SkillsToDo/NoProjects.js","components/SkillsToDo/SkillToDoItem/PractisedToday.js","components/Modals/OptionSelectModal.js","components/SkillsToDo/SkillToDoItem/MarkSkillAsPractised.js","components/SkillsToDo/SkillToDoItem/Skill.js","components/SkillsToDo/SkillToDoItem/NoSkill.js","components/SkillsToDo/SkillToDoItem/SkillToDoItem.js","components/Timer/Timer.js","components/Message/Message.js","components/Schedule/ProjectSchedules.js","components/SkillsToDo/SkillsToDo.js","pages/HomePage.js","pages/IntroPage/IntroPage.js","components/Charts/generateLineChartData.js","components/Charts/LineChart.js","components/Charts/NoChartsDisplay.js","components/LoadingSpinner/LoadingSpinner.js","pages/ChartsPage.js","libs/HooksLib.js","libs/ErrorLib.js","components/Forms/SignIn/SignIn.js","components/Forms/SignUp/SignUp.js","components/Forms/ResetPassword/ResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REGION","USER_POOL_ID","APP_CLIENT_ID","AppContext","createContext","useAppContext","useContext","withRouter","history","useState","expanded","setExpanded","loggedIn","setLoggedIn","a","Auth","signOut","push","focus","React","createRef","useEffect","Navbar","className","fixed","expand","variant","Brand","Toggle","aria-controls","onClick","Collapse","id","Nav","ref","el","exact","to","type","Modal","title","status","handleClose","onSave","project","setProject","saveChanges","name","toInput","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","autoFocus","placeholder","value","onChange","target","onKeyPress","key","Footer","disabled","NewProject","addProject","smShow","setSmShow","AddSkill","projectId","addSkill","skill","setSkill","addAndResetSkill","length","Row","tabIndex","EditSkill","skillId","skillToDo","editSkillName","deleteSkill","skillName","setSkillName","debouncedSkillName","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","delSkill","window","confirm","defaultValue","SkillItem","SingleInputModal","startValue","setValue","e","ProjectItem","skills","open","deleteProject","editProjectName","cardOpen","setCardOpen","Card","projectName","aria-expanded","in","map","ProjectList","projects","ProjectsPage","loadingProjects","timesTablesProject","javascriptProject","footballProject","ExampleSkillItem","ExampleProject","NoProjects","updatePractisedSkill","Col","PractisedToday","OptionSelectModal","difficulty","MarkSkillAsPractised","Skill","NoSkill","SkillToDoItem","datePractised","moment","isSame","Timer","duration","playing","setPlaying","timerKey","setTimerKey","timerDuration","stratTime","Date","now","remainingTime","renderTime","dimension","time","timerProps","isPlaying","strokeWidth","colors","Container","onComplete","alert","initialRemainingTime","elapsedTime","totalElapsedTime","Button","Message","ProjectSchedule","schedule","setSchedule","daysValue","setDaysValue","days","setDays","changeDaysShown","axios","get","add","then","response","data","catch","error","console","log","Table","bordered","responsive","colSpan","date","format","SkillsToDo","showTimer","setShowTimer","find","xs","md","xl","HomePage","IntroPage","lg","Figure","Image","src","forgettingCurve","width","alt","rounded","Caption","href","combattingForgettingCurve","generateLineChartData","dateFirstPractised","practisedData","chartDataSeries","lastData","multiplier","simpleData","flatMap","i","newData","day","lastGap0","lastGap1","val","Math","exp","remainingDays","diff","x","y","generateXYData","LineChart","height","chartData","xValues","point","maxXValue","max","style","margin","top","right","bottom","left","xScale","min","yScale","axisTop","axisRight","axisLeft","legend","legendPosition","legendOffset","axisBottom","tickValues","floor","theme","fontSize","fontFamily","axis","text","curve","scheme","lineWidth","pointSize","enableArea","enableGridX","enableGridY","tooltip","useMesh","enableCrosshair","NoChartsDisplay","SevenTimesTables","ThreeTimesTables","LoadingSpinner","Spinner","animation","role","ChartsPage","userId","setChartData","loadingChartData","setLoadingChartData","linechartData","fluid","useFormFields","initialState","fields","setValues","event","onError","message","toString","Error","setUserId","setName","isLoading","setIsLoading","email","password","validationError","setValidationError","handleFieldChange","clearValidationErrors","updatedValidationError","Object","assign","preventDefault","emailValidator","validate","signIn","currentUserInfo","userInfo","username","attributes","Form","Group","controlId","Label","Control","Text","color","passwordSchema","passwordValidator","is","has","uppercase","lowercase","digits","symbols","newUser","setNewUser","confirmPassword","newName","newEmail","newPassword","confirmationCode","handleNewUserSubmit","signUp","handleConfirmationSubmit","confirmSignUp","user","post","onSubmit","bsSize","block","ResetPassword","code","codeSent","setCodeSent","confirmed","setConfirmed","handleSendCodeClick","forgotPassword","handleConfirmClick","forgotPasswordSubmit","App","document","body","addEventListener","classList","keyCode","remove","isAuthenticating","setIsAuthenticating","setProjects","setLoadingProjects","currentSession","onLoad","newProject","datePracticed","resProject","Provider","NavBar","path","practisedSkill","put","updatedSkill","updatedProjects","newSkill","delete","filter","Boolean","location","hostname","match","Amplify","configure","mandatorySignId","region","config","userPoolId","userPoolWebClientId","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7f42734.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the-forgetting-curve.1d0cb6a1.png\";","module.exports = __webpack_public_path__ + \"static/media/combating-the-forgetting-curve.66044795.png\";","module.exports = __webpack_public_path__ + \"static/media/SevenTimesTables.c6afe294.png\";","module.exports = __webpack_public_path__ + \"static/media/ThreeTimesTables.c8746d0b.png\";","export default {\n    cognito: {\n      REGION: \"eu-west-2\",\n      USER_POOL_ID: \"eu-west-2_kiqr3R2mb\",\n      APP_CLIENT_ID: \"5dkf83sgld69f2nvedggntas11\",\n    },\n  };","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nfunction Header({ history }) {\n  const [expanded, setExpanded] = useState(false);\n  const { loggedIn, setLoggedIn } = useAppContext();\n\n  async function handleLogOut() {\n    await Auth.signOut();\n    setLoggedIn(false);\n    history.push(\"/grokit-frontend/\");\n  }\n\n  let focus = React.createRef();\n\n  useEffect(() => {\n    focus.focus();\n  }, [focus]);\n\n  return (\n    <Navbar className=\"NavBar\" fixed=\"top\" expand=\"sm\" variant=\"dark\" expanded={expanded}>\n      <Navbar.Brand className=\"grokitLogo\">GrokIt</Navbar.Brand>\n      <Navbar.Toggle className=\"custom-toggle\" aria-controls=\"main-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")} />\n      <Navbar.Collapse id=\"main-navbar-nav\">\n        <Nav onClick={() => setExpanded(false)}>\n          <NavLink\n            ref={(el) => {\n              focus = el;\n            }}\n            className=\"navlink\"\n            exact\n            to=\"/grokit-frontend/\"\n          >\n            Home\n          </NavLink>\n          {loggedIn ? (\n            <>\n              <NavLink className=\"navlink\" to=\"/grokit-frontend/projects\">\n                Projects\n              </NavLink>\n              <NavLink className=\"navlink\" to=\"/grokit-frontend/charts\">\n                Charts\n              </NavLink>\n            </>\n          ) : (\n            \"\"\n          )}\n        </Nav>\n        <Nav className=\"ml-auto\" onClick={() => setExpanded(false)}>\n          {loggedIn ? (\n            <button type=\"button\" className=\"secondaryButton\" onClick={handleLogOut}>\n              Sign Out\n            </button>\n          ) : (\n            <>\n              <button type=\"button\" className=\"secondaryButton\" onClick={() => history.push(\"/grokit-frontend/signin\")}>\n                Sign In\n              </button>\n              <button type=\"button\" className=\"primaryButton\" onClick={() => history.push(\"/grokit-frontend/signup\")}>\n                Sign up\n              </button>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default withRouter(Header);\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction Modal({ title = \"\", status = false, handleClose = () => { }, onSave = () => { } }) {\n  const [project, setProject] = useState({});\n\n  const updateProject = ({ target: { value = \"\", name = \"\" } = {} }) => {\n    setProject({ ...project, [name]: value });\n  };\n\n  const saveChanges = () => {\n    onSave(project);\n  };\n\n  const { name = \"\" } = project;\n\n  let toInput = React.createRef();\n\n  useEffect(() => {\n    toInput.focus();\n  }, [toInput])\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id=\"example-modal-sizes-title-sm\">{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body autoFocus>\n        <label className=\"Modal__label\">\n          <input \n            ref={el => { toInput = el }} \n            className=\"Modal__input\" \n            type=\"text\" \n            placeholder=\"Enter project name\" \n            value={name} name=\"name\" \n            onChange={updateProject} \n            onKeyPress={({key}) => key === \"Enter\" ? saveChanges() : null}\n            />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <button type=\"button\" className=\"secondaryButton darker\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"primaryButton\" onClick={saveChanges} disabled={!name}>\n          Save\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Modal from \"components/CreateNewProject/Modal\";\n\nfunction NewProject({ addProject = () => {} }) {\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (project) => {\n    addProject(project);\n    handleClose();\n  };\n\n  return (\n    <>\n      <div className=\"newProject\" onClick={handleShow}>\n        <button type=\"button\" className=\"primaryButton\">\n          Add New Project +\n        </button>\n      </div>\n      {smShow ? <Modal title=\"Create New Project\" status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n    </>\n  );\n}\n\nexport default NewProject;\n","import React, { useState } from \"react\";\nimport {Row} from \"react-bootstrap\";\n\nfunction AddSkill({ projectId, addSkill = () => {} }) {\n  const [skill, setSkill] = useState(\"\");\n\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\" && skill.length) {\n      addAndResetSkill();\n    }\n  };\n\n  const modifySkill = ({ target: { value = \"\" } = {} }) => {\n    setSkill(value);\n  };\n\n  const addAndResetSkill = () => {\n    if (skill.length) {\n      addSkill(projectId, skill);\n      setSkill(\"\");\n    }\n  };\n\n  return (\n    <Row>\n    <div className=\"addSkill\">\n      <input type=\"text\" placeholder=\"Add New Skill...\" value={skill} onChange={modifySkill} onKeyPress={handleKeyPress} />\n      <p\n        className=\"plusAdd\"\n        tabIndex=\"0\"\n        title=\"Add skill\"\n        onClick={addAndResetSkill}\n        onKeyPress={({ key }) => (key === \"Enter\" ? addAndResetSkill() : null)}\n      >\n        +\n      </p>\n    </div>\n    </Row>\n  );\n}\n\nexport default AddSkill;\n","import React, {useState, useEffect} from \"react\";\nimport useDebounce from \"utilities/useDebounce\";\n\nfunction EditSkill({ skillId, name, skillToDo = false, editSkillName = () => {}, deleteSkill = () => {} }) {\n  const [skillName, setSkillName] = useState(name); \n  const debouncedSkillName = useDebounce(skillName,500)\n  \n  const delSkill = () => {\n    if (window.confirm(`Are you sure you wish to delete \"${name}\"? This will delete your progress and ${name}'s chart data.`)) {\n      deleteSkill(skillId, skillToDo);\n   }\n  };\n\n  useEffect(()=> {\n    editSkillName(skillId,debouncedSkillName);\n  },[debouncedSkillName]);\n\n  return (\n    <div className=\"skillItem\">\n      <input type=\"text\" defaultValue={name} onChange={({ target: { value = \"\" } = {} }) => setSkillName(value)} />\n      <p tabIndex=\"0\" title=\"Delete skill\" onClick={delSkill} onKeyPress={({key}) => key === \"Enter\" ? delSkill() : null}>×</p>\n    </div>\n  );\n}\n\nexport default EditSkill;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value] \n  );\n\n  return debouncedValue;\n}","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport EditSkill from \"components/ProjectList/SkillItem/EditSkill/EditSkill\";\n\nfunction SkillItem({ skillId = \"\", name = \"\", skillToDo = false, deleteSkill = () => {}, editSkillName = () => {} }) {\n  return (\n    <Row>\n      <EditSkill skillId={skillId} name={name} editSkillName={editSkillName} deleteSkill={deleteSkill} skillToDo={skillToDo}/>\n    </Row>\n  );\n}\n\nexport default SkillItem;\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction SingleInputModal({ startValue = \"\", title = \"\", placeholder = \"\", status = false, handleClose = () => {}, onSave = () => {} }) {\n  const [value, setValue] = useState(startValue);\n\n  const saveChanges = () => {\n    onSave(value);\n  };\n\n  let toInput = React.createRef();\n\n  useEffect(() => {\n    toInput.focus();\n  }, [toInput])\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label className=\"Modal__label\">\n          <input \n            className=\"Modal__input\" \n            type=\"text\" \n            placeholder={placeholder} \n            value={value} \n            onChange={(e) => setValue(e.target.value)}            \n            ref={el => { toInput = el }}\n            onKeyPress={({key}) => key === \"Enter\" ? saveChanges() : null}  />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <button type=\"button\" className=\"secondaryButton darker\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"primaryButton\" onClick={saveChanges} disabled={!value}>\n          Save\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default SingleInputModal;\n","import React, { useState } from \"react\";\nimport { Card, Collapse } from \"react-bootstrap\";\nimport AddSkill from \"components/AddSkill/AddSkill\";\nimport SkillItem from \"components/ProjectList/SkillItem/SkillItem\";\nimport SingleInputModal from \"components/Modals/SingleInputModal\";\n\nfunction ProjectItem({\n  project: { projectId, name, skills = [] } = {},\n  open = true,\n  skillToDo = false,\n  addSkill = () => {},\n  deleteSkill = () => {},\n  deleteProject = () => {},\n  editSkillName = () => {},\n  editProjectName = () => {},\n}) {\n  const [cardOpen, setCardOpen] = useState(false);\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const handleDeleteProjectButton = () => {\n    if (window.confirm(`Are you sure you wish to delete \"${name}\"? This will delete all associated skills.`)) {\n      deleteProject(projectId);\n    }\n  };\n\n  const onSave = (projectName) => {\n    editProjectName(projectId, projectName);\n    handleClose();\n  };\n\n  return (\n    <Card className=\"projectListCard projectItem\" key={projectId}>\n      <Card.Header className=\"h4\">\n        <div className=\"projectItem__modifier\">\n          <h2>✎</h2>\n          <h1 onClick={() => setCardOpen(!cardOpen)}>{name}</h1>\n          <button type=\"button\" title=\"Edit project name\" onClick={handleShow}>\n            ✎\n          </button>\n          {smShow ? (\n            <SingleInputModal\n              title=\"Rename project\"\n              placeholder=\"Enter new project name\"\n              startValue={name}\n              status={smShow}\n              handleClose={handleClose}\n              onSave={onSave}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div\n          tabIndex=\"0\"\n          title={`${cardOpen ? \"Hide skills\" : \"View skills\"}`}\n          onClick={() => setCardOpen(!cardOpen)}\n          onKeyPress={({ key }) => (key === \"Enter\" ? setCardOpen(!cardOpen) : null)}\n        >\n          <div className={`arrow ${cardOpen ? \"open\" : \"\"}`} aria-controls=\"task-item-contents\" aria-expanded={open}></div>\n        </div>\n      </Card.Header>\n      <Collapse in={cardOpen}>\n        <Card.Body>\n          <AddSkill projectId={projectId} addSkill={addSkill} />\n          {skills.map(({ skillId, name }) => (\n            <SkillItem\n              key={skillId}\n              skillId={skillId}\n              name={name}\n              deleteSkill={deleteSkill}\n              editSkillName={editSkillName}\n              skillToDo={skillToDo}\n            />\n          ))}\n          <button type=\"button\" className=\"secondaryButton\" onClick={handleDeleteProjectButton}>\n            Delete Project\n          </button>\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default ProjectItem;\n","import React from \"react\";\n\nimport ProjectItem from \"./ProjectItem/ProjectItem\";\n\nfunction ProjectList({\n  projects = [],\n  skillToDo = false,\n  addSkill = () => {},\n  deleteSkill = () => {},\n  deleteProject = () => {},\n  editSkillName = () => {},\n  editProjectName = () => {},\n}) {\n  return (\n    <div className=\"cardContainer\">\n      {projects.map((project) => (\n        <ProjectItem\n          key={project.projectId}\n          project={project}\n          addSkill={addSkill}\n          deleteProject={deleteProject}\n          deleteSkill={deleteSkill}\n          editSkillName={editSkillName}\n          editProjectName={editProjectName}\n          skillToDo={project.skillToDo}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ProjectList;\n","import React from 'react';\n\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport NewProject from 'components/CreateNewProject/NewProject';\nimport ProjectList from 'components/ProjectList/ProjectList';\n\nfunction ProjectsPage({ projects = [], addProject = () => {}, addSkill = () => {}, deleteSkill = () => {}, deleteProject = () => {}, editSkillName = () => {}, editProjectName = () => {} }) {\n  const { loadingProjects } = useAppContext();\n\n  if (!loadingProjects)  {\n      return (\n          <>\n      <NewProject addProject={addProject} />\n        <ProjectList\n          projects={projects}\n          addSkill={addSkill}\n          deleteSkill={deleteSkill}\n          deleteProject={deleteProject}\n          editSkillName={editSkillName}\n          editProjectName={editProjectName}\n        />\n        </>\n  );}\n  else {\n    return null;\n  }\n}\n\nexport default ProjectsPage;\n\n\n\n","export const timesTablesProject = { \n    name: \"Times tables\", \n    skills: [\n        {name:\"Two times tables\"}, \n        {name:\"Three times tables\"},\n        {name:\"Four times tables\"},\n        {name:\"Five times tables\"},\n        {name:\"Six times tables\"},\n        {name:\"Seven times tables\"},\n        {name:\"Eight times tables\"},\n        {name:\"Nine times tables\"},\n        {name:\"Ten times tables\"},\n        {name:\"Eleven times tables\"},\n        {name:\"Twelve times tables\"}\n    ]};\n\n    export const javascriptProject = { \n        name: \"Javascript Array Methods\", \n        skills: [\n            {name:\"Map\"}, \n            {name:\"Reduce\"},\n            {name:\"Filter\"},\n            {name:\"ForEach\"}\n        ]};\n\n        export const footballProject = { \n            name: \"Football Skills\", \n            skills: [\n                {name:\"Shooting\"}, \n                {name:\"Goalkeeping\"},\n                {name:\"Dribbling\"},\n                {name:\"Throw ins\"}\n            ]};","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\n\nfunction ExampleSkillItem({ name }) {    \n\n    return (\n        <Row>\n            <p key={name}>{name}</p>\n        </Row>\n    );\n}\n\nexport default ExampleSkillItem;\n","import React, { useState } from \"react\";\nimport { Card, Collapse } from \"react-bootstrap\";\nimport ExampleSkillItem from \"components/ProjectList/SkillItem/ExampleSkillItem\";\n\nfunction ExampleProject({ project: { name, skills = [] } = {}, open = true }) {\n  const [cardOpen, setCardOpen] = useState(false);\n\n  return (\n    <Card className=\"primaryCard\" key={name}>\n      <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open} onClick={() => setCardOpen(!cardOpen)}>\n        <h1 onClick={() => setCardOpen(!cardOpen)}>{name}</h1>\n        <div className={`arrow ${cardOpen ? \"open\" : \"\"}`}></div>\n      </Card.Header>\n      <Collapse in={cardOpen}>\n        <Card.Body>\n          {skills.map(({ name }) => (\n            <ExampleSkillItem key={name} name={name} />\n          ))}\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default ExampleProject;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  timesTablesProject,\n  javascriptProject,\n  footballProject,\n} from \"components/ProjectList/ExampleProjects/exampleProjectData\";\nimport ExampleProject from \"components/ProjectList/ExampleProjects/ExampleProject\";\n\nfunction NoProjects({\n  projects = [],\n  open = true,\n  updatePractisedSkill = () => {},\n  addProject = () => {},\n}) {\n  return (\n    <>\n      <div className=\"NoProjects__description\">\n        Welcome to <span className=\"grokitLogo\">GrokIt</span>. Let's get started\n        by adding some projects that you want to Grok. <br />\n        Look at the the example projects below and then click{\" \"}\n        <Link to=\"/grokit-frontend/projects\">here</Link> to start adding your\n        own.\n      </div>\n      <Row>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={timesTablesProject}\n          />\n        </Col>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={javascriptProject}\n          />\n        </Col>\n        <Col>\n          <ExampleProject\n            addProject={addProject}\n            projects={projects}\n            project={footballProject}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default NoProjects;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction PractisedToday({ projectName = \"\" }) {\n    return (\n        <Row className=\"center-skillToDo\">{projectName}: Done for today</Row>\n    )\n}\n\nexport default PractisedToday;\n","import React, {useEffect} from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction OptionSelectModal({ \n  title = \"\", \n  status = false, \n  handleClose = () => {}, \n  onSave = () => {} }) {\n\n  const saveChanges = (difficulty) => {\n    onSave(difficulty);\n  };\n\n  let toInput = React.createRef();\n\n  useEffect(() => {\n    toInput.focus();\n  }, [toInput])\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Footer>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"easy\")}>\n          Easy\n        </button>\n        <button ref={el => { toInput = el }} className=\"primaryButton\" onClick={() => saveChanges(\"medium\")}>\n          Normal\n        </button>\n        <button className=\"primaryButton\" onClick={() => saveChanges(\"hard\")}>\n          Hard\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default OptionSelectModal;\n","import React, { useState } from \"react\";\nimport OptionSelectModal from \"components/Modals/OptionSelectModal\";\n\nfunction MarkSkillAsPractised({ skill = {}, updatePractisedSkill = () => {} }) {\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (difficulty) => {\n    updatePractisedSkill(skill, difficulty);\n    handleClose();\n  };\n\n  return (\n    <>\n      <button className=\"primaryButton small\" title=\"Mark as practised\" onClick={handleShow}>\n      ✓\n      </button>\n      {smShow ? <OptionSelectModal title=\"How did the practice feel?\" status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n    </>\n  );\n}\n\nexport default MarkSkillAsPractised;\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport MarkSkillAsPractised from \"./MarkSkillAsPractised\";\n\nfunction Skill({ projectName = \"\", skill = {}, updatePractisedSkill = () => {} }) {\n  return (\n    <Row className=\"center-skillToDo\">\n      <p>\n        {projectName}: {skill.name}\n      </p>\n      <MarkSkillAsPractised updatePractisedSkill={updatePractisedSkill} skill={skill} />\n    </Row>\n  );\n}\n\nexport default Skill;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction NoSkill({ projectName = \"\" }) {\n    return (\n        <Row className=\"center-skillToDo\">{projectName}: No task today</Row>\n    )\n}\n\nexport default NoSkill;\n","import React from 'react';\nimport moment from 'moment';\nimport PractisedToday from './PractisedToday';\nimport Skill from './Skill';\nimport NoSkill from './NoSkill';\n\n\nfunction SkillToDoItem({ datePractised = \"\", projectName = \"\", skillToDo, skill = {}, updatePractisedSkill = () => { } }) {\n    if (moment(datePractised).isSame(moment(), \"day\")) {\n        return (<PractisedToday projectName={projectName} />)\n    }\n    else {\n        if (skillToDo) {\n            return (<Skill projectName={projectName} skill={skill} updatePractisedSkill={updatePractisedSkill} />)\n        }\n        else {\n            return (<NoSkill projectName={projectName} />)\n        }\n    }\n};\n\nexport default SkillToDoItem;\n","import React, { useState } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nfunction Timer({ duration }) {\n  const [playing, setPlaying] = useState(false);\n  const [timerKey, setTimerKey] = useState(1);\n\n  const timerDuration = duration;\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + timerDuration;\n  const remainingTime = endTime - stratTime;\n  const minuteSeconds = 60;\n\n  const getTimeSeconds = (time) => (minuteSeconds - time) | 0;\n  const getTimeMinutes = (time) => (time / minuteSeconds) | 0;\n\n  const renderTime = (dimension, time) => {\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{time}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  };\n\n  const timerProps = {\n    isPlaying: playing,\n    size: 120,\n    strokeWidth: 8,\n    colors: [[\"#193654\"], [\"#6babff\"]],\n  };\n\n  const handleResetClick = () => {\n    setTimerKey(timerKey + 1);\n    setPlaying(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"timer\" key={timerKey}>\n        <div\n          className=\"timer-circle\">\n          <CountdownCircleTimer\n            onComplete={() => window.alert(\"Time for a break\")}\n            {...timerProps}\n            duration={timerDuration}\n            initialRemainingTime={remainingTime}\n          >\n            {({ elapsedTime }) =>\n              renderTime(\"minutes\", getTimeMinutes(timerDuration - elapsedTime))\n            }\n          </CountdownCircleTimer>\n        </div>\n        <div\n          className=\"timer-circle\">\n            <CountdownCircleTimer\n          className=\"timer-circle\"\n          {...timerProps}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n          </div>\n        \n      </Row>\n      <Row className=\"button-row\">\n        <Button className=\"timer-button\" onClick={() => setPlaying(true)}>\n          Start\n        </Button>\n        <Button className=\"timer-button\" onClick={() => setPlaying(false)}>\n          Pause\n        </Button>\n        <Button className=\"timer-button\" onClick={handleResetClick}>\n          Reset\n        </Button>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Timer;\n","import React from \"react\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nfunction Message() {\n  const { name } = useAppContext();\n\n  return (\n    <div className=\"message\">\n      <h4>Hello {name} your skills to practise today are... </h4>\n    </div>\n  );\n}\nexport default Message;\n","import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\n\n\nfunction ProjectSchedule({ name = \"\", projectId = \"\", datePractised = \"\" }) {\n    const [schedule, setSchedule] = useState([]);\n    const [daysValue, setDaysValue] = useState(7);\n    const [days, setDays] = useState(7);\n\n    useEffect(() => {\n        axios\n            .get(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/schedule/${projectId}/${datePractised}?endDate=${moment().add(days - 1, \"days\")}`)\n            .then((response) => {\n                setSchedule(response.data.schedule);\n            })\n            .catch((error) => {\n                console.log(\"Error fetching data\", error);\n            });\n    }, [projectId, days, datePractised]);\n\n    function changeDaysShown(e) {\n        setDays(daysValue);\n    }\n\n    return (\n        <>\n            <div className=\"projectSchedule\">\n                <span>\n                    <label>Number of days to show: </label>\n                    <input\n                        type=\"number\"\n                        value={daysValue}\n                        onChange={e => setDaysValue(e.target.value)}\n                        onKeyPress={({ key }) => key === \"Enter\" ? changeDaysShown() : null} />\n                    <p\n                        className=\"simpleButton\"\n                        tabIndex=\"0\"\n                        title=\"View schedule\"\n                        onKeyPress={({ key }) => key === \"Enter\" ? changeDaysShown() : null}\n                        onClick={changeDaysShown}>✓</p></span>\n            </div>\n            <Table className=\"schedule-table\" bordered size=\"sm\" responsive>\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">Project: {name}</th>\n                    </tr>\n                </thead>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Skill</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {schedule.map(({ date, skill }) => (\n                        <tr key={date}>\n                            <td>{moment(date).format(\"DD MMM YYYY\")}</td>\n                            <td>{skill}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default ProjectSchedule;\n","import React, { useState } from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\n\nimport SkillToDoItem from \"./SkillToDoItem/SkillToDoItem\";\nimport Timer from \"components/Timer/Timer\";\nimport Message from \"components/Message/Message\";\nimport ProjectSchedule from \"components/Schedule/ProjectSchedules\";\n\nfunction SkillsToDo({ projects = [], open = true, updatePractisedSkill = () => {} }) {\n  const [showTimer, setShowTimer] = useState(false);\n  const [name] = useState();\n\n  return (\n    <div className=\"skillToDo\">\n      <Message name={name} />\n      <Card className=\"primaryCard\">\n        <Card.Body className=\"h5\">\n          {projects &&\n            projects.map(({ projectId, datePractised, name, skillToDo, skills = [] }) => {\n              if (!skills.length) {\n                return null;\n              }\n              const skill = skills.find(({ skillId }) => skillId === skillToDo) || {};\n\n              return (\n                <SkillToDoItem\n                  key={projectId}\n                  datePractised={datePractised}\n                  projectName={name}\n                  skill={skill}\n                  skillToDo={skillToDo}\n                  updatePractisedSkill={updatePractisedSkill}\n                />\n              );\n            })}\n        </Card.Body>\n      </Card>\n      {showTimer ? (\n        <>\n          <button type=\"button\" className=\"primaryButton\" onClick={() => setShowTimer(false)}>\n            Close Pomodoro Timer\n          </button>\n          <Timer duration={1500} />\n        </>\n      ) : (\n        <button type=\"button\" className=\"primaryButton\" onClick={() => setShowTimer(true)}>\n          Show Pomodoro Timer\n        </button>\n      )}\n      <Row className=\"schedule-header\">\n        <Col>\n          <h5 className=\"schedule-header__title\">Predicted Project Schedule</h5>\n        </Col>\n      </Row>\n      <Row>\n        {projects.map(({ projectId, name, datePractised }) => (\n          <Col key={projectId} xs={12} md={6} xl={4}>\n            <ProjectSchedule projectId={projectId} name={name} datePractised={datePractised} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n\nexport default SkillsToDo;\n","import React from 'react';\n\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport NoProjects from 'components/SkillsToDo/NoProjects';\nimport SkillsToDo from 'components/SkillsToDo/SkillsToDo';\n\nfunction HomePage({ projects = [], open = true, updatePractisedSkill = () => {}, addProject = () => {} }) {\n  const { loadingProjects } = useAppContext();\n\n  if (!loadingProjects)  {return (\n  projects.length === 0 ? <NoProjects projects = {projects} addProject={addProject}/> : <SkillsToDo projects={projects} updatePractisedSkill={updatePractisedSkill}/>\n  );}\n  else {\n    return null;\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Figure } from \"react-bootstrap\";\nimport forgettingCurve from \"img/the-forgetting-curve.png\";\nimport combattingForgettingCurve from \"img/combating-the-forgetting-curve.png\";\n\nfunction IntroPage() {\n  return (\n    <Container className=\"introPage\">\n      <Row className=\"introPage__introduction\">\n        <Col>\n          <p>\n            Welcome, please click here to <br />\n            <Link to=\"/grokit-frontend/signin\">Sign in</Link> or <Link to=\"/grokit-frontend/signup\">Sign Up</Link>{\" \"}\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>\n            Why <span className=\"grokitLogo\">GrokIt</span>?\n          </h2>\n          <h3 className=\"introPage__quotation\">\n            <i>\n              grok <small>(verb)</small>\n            </i>\n          </h3>\n          <p>to understand completely and intuitively </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12} lg={6}>\n          <Figure>\n            <Figure.Image src={forgettingCurve} width={450} alt=\"The Forgetting Curve\" rounded />\n            <Figure.Caption>\n              The Forgetting Curve, image from{\" \"}\n              <a href=\"https://www.growthengineering.co.uk/wp-content/uploads/2016/11/the-forgetting-curve.png\">Growth Engineering</a>{\" \"}\n            </Figure.Caption>\n          </Figure>\n\n          <p>Information is lost from our memory over time if no effort is made to retain it.</p>\n        </Col>\n        <Col xs={12} lg={6}>\n          <Figure>\n            <Figure.Image src={combattingForgettingCurve} width={450} alt=\"Combating the Forgetting Curve\" rounded />\n            <Figure.Caption>\n              Combating the Forgetting Curve, image from{\" \"}\n              <a href=\"https://www.growthengineering.co.uk/wp-content/uploads/2016/09/combating-the-forgetting-curve.png\">\n                Growth Engineering\n              </a>{\" \"}\n            </Figure.Caption>\n          </Figure>\n          <p>\n            The most effective time to practise a skill or rehearse knowledge is just before you forget it. We will remind you what to work\n            on each day, until you{\" \"}\n            <strong>\n              <span className=\"grokitLogo\">GrokIt</span>\n            </strong>\n            .\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default IntroPage;\n","import moment from 'moment';\n\nfunction generateXYData(practisedData,dateFirstPractised) {\n    let lastData = practisedData[0];\n    let multiplier = 1;\n\n    const simpleData = practisedData.flatMap((data,i) => {      \n      let newData = [];\n      let days = data.day - lastData.day;\n      if (data.lastGap0 !== 0 && data.lastGap1 !== 0) {\n        multiplier = multiplier*data.lastGap0/data.lastGap1;\n      }\n      for (let i=1; i<=days; i++) {\n        let val = 100*Math.exp(-i*multiplier) | 0;\n        newData.push(val);\n      }\n      newData.push(100);\n      lastData = data;      \n      \n      if (i === practisedData.length-1) {\n        let remainingDays = moment().diff(moment(dateFirstPractised),\"days\")-lastData.day;      \n        if (data.lastGap0 !== 0 && data.lastGap1 !== 0) {\n          multiplier = multiplier*data.lastGap0/data.lastGap1;\n        }\n        for (let i = 1; i<=remainingDays; i++) {\n          let val = 100*Math.exp(-i*multiplier) | 0;\n         newData.push(val);\n        }\n      }\n      return newData;\n    })\n    let x = 0;\n    return simpleData.map((data) => {      \n      if (data !== 100) {x++}\n      let result = {x, y:data}\n      return result;\n    });\n}\n\nexport default function generateLineChartData({skillName, dateFirstPractised, practisedData = []}) {\n  let chartDataSeries = {id:skillName};\n  chartDataSeries.data = generateXYData(practisedData, dateFirstPractised);\n  return [chartDataSeries];\n}\n  ","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n\nimport generateLineChartData from './generateLineChartData';\n\nfunction LineChart({title = \"\", height = 250, chartData = []}) {\n\n    function CustomTooltip({point: {data: {x, y}}}) {\n        return (\n            <div className = \"linechart__tooltip\">\n                Day: {x} <br />\n                {y === 100 ? \"Practised\" : `Remembered: ${y | 0}%`}\n            </div>\n        )\n    }\n\n    const theme = {\n        fontSize: 14,\n        fontFamily: \"Verdana, Arial, sans-serif\",\n        axis: {\n            legend: {\n                text: {\n                    fontSize: 16,\n                }\n            }\n        }\n    };\n\n    const data = generateLineChartData(chartData);\n    \n    const xValues = data[0].data.map(point => point.x);\n    const maxXValue = Math.max(...xValues);\n\n    return (\n        <div className = \"linechart\" style = {{height}}>\n        <h3> {title}</h3>\n            <ResponsiveLine className=\"graph\"\n                data={data}\n                margin={{ top: 10, right: 30, bottom: 50, left: 60 }}\n                xScale={{\n                    type: \"linear\",\n                    min: 0,\n                    max: maxXValue > 5 ? maxXValue : 5,\n                }}\n                yScale={{\n                    type: \"linear\",\n                    min: 0\n                }}\n                axisTop={null}\n                axisRight={null}\n                axisLeft={{\n                    legend: \"% Remembered\",\n                    legendPosition: \"middle\",\n                    legendOffset: -50\n                }}\n                axisBottom={{\n                    legend: \"Days from first practice\",\n                    legendPosition: \"middle\",\n                    legendOffset: 40,\n                    tickValues: maxXValue > 5 ? maxXValue / Math.floor(maxXValue/5) : 5\n                }}\n                theme={theme}\n                curve={\"linear\"}\n                colors={{ scheme: \"accent\" }}\n                lineWidth={3}\n                pointSize={8}\n                enableArea={false}\n                enableGridX={true}\n                enableGridY={true}\n                tooltip={CustomTooltip}\n                useMesh={true}\n                enableCrosshair={false}                \n            />\n            </div>\n    );\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport { Row, Col, Figure } from \"react-bootstrap\";\nimport SevenTimesTables from \"img/SevenTimesTables.png\";\nimport ThreeTimesTables from \"img/ThreeTimesTables.png\";\n\nfunction NoChartsDisplay() {\n  return (\n    <Row>\n      <h4 className=\"noChartsDisplay__title\">\n        As you start completing skills, charts will display to show your progress, like in the example below.\n      </h4>\n      <Row>\n        <Col xs={12} lg={6}>\n        <Figure>\n        <Figure.Image src={SevenTimesTables} width={450} alt=\"Seven times tables\" rounded/>\n        </Figure>\n        </Col>\n        <Col xs={12} lg={6}>\n        <Figure>\n        <Figure.Image src={ThreeTimesTables} width={450} alt=\"Three times tables\" rounded/>\n        </Figure>\n        </Col>\n      </Row>\n    </Row>\n  );\n}\n\nexport default NoChartsDisplay;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction LoadingSpinner() {\n\n    return (\n        <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    );\n}\n\nexport default LoadingSpinner;\n","import React, {useEffect, useState, Fragment} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nimport LineChart from \"components/Charts/LineChart\";\nimport NoChartsDisplay from \"components/Charts/NoChartsDisplay\";\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\n\n\nfunction ChartsPage() {\n    const { userId } = useAppContext();\n    const [chartData, setChartData] = useState([]);\n    const [loadingChartData, setLoadingChartData] = useState(true);\n\n    useEffect(() => {        \n      setLoadingChartData(true);\n          axios\n            .get(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/linechart?userId=${userId}`)\n            .then((response) => {\n              setChartData(response.data.linechartData);\n              setLoadingChartData(false);\n            })\n            .catch((error) => {\n              console.log(\"Error fetching data\", error);\n            });\n      },[userId]);\n\n    if (!loadingChartData) {\n      return (\n        <Container fluid=\"lg\" >\n            {chartData.length === 0 \n            ? <NoChartsDisplay/>\n            : chartData && chartData.map(({projectName, skills = []}) => (\n                <Fragment key = {projectName}>\n                <Row className=\"chart-row-header\">\n                    <h3>{projectName}</h3>\n                    </Row>\n                    <Row className=\"chart-row\">\n                    {skills.map((skill) => (\n                        <Col key={skill.skillId} xs={12} lg={6}>\n                        <LineChart chartData = {skill} title = {skill.skillName} height = {300}/>                            \n                        </Col>\n                    ))}\n                </Row>\n                </Fragment>\n            ))}\n        </Container>\n    );\n    }\n    else {\n      return (<LoadingSpinner/>);\n    }\n\n    \n}\n\nexport default ChartsPage;\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function (event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value,\n      });\n    },\n  ];\n}\n","export function onError(error) {\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    message = error.message;\n  }\n\n  alert(message);\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Form, Spinner } from \"react-bootstrap\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport emailValidator from \"email-validator\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\n\nfunction SignIn({ history }) {\n  const { setLoggedIn, setUserId, setName } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [validationError, setValidationError] = useState({\n    email: { error: false, message: \"Please enter a valid email.\" },\n    password: { error: false, message: \"Please enter a valid password.\" },\n  });\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n  });\n\n  function clearValidationErrors() {\n    const updatedValidationError = Object.assign({}, validationError);\n    updatedValidationError.email.error = false;\n    updatedValidationError.password.error = false;\n    setValidationError(updatedValidationError);\n  }\n\n  async function handleSignInSubmit(e) {\n    e.preventDefault();\n    clearValidationErrors();\n\n    if (\n      fields.email.length === 0 ||!emailValidator.validate(fields.email)\n    ) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.email.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (fields.password.length < 8) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.password.error = true;\n      setValidationError(updatedValidationError);\n    } else {\n      setIsLoading(true);\n      try {\n        await Auth.signIn(fields.email, fields.password);\n        const userInfo = await Auth.currentUserInfo();\n        setLoggedIn(true);\n        setUserId(userInfo.username);\n        setName(userInfo.attributes.name);\n        history.push(\"/grokit-frontend/\");\n        setIsLoading(false);\n      } catch (e) {\n        setIsLoading(false);\n        onError(e);\n      }\n    }\n  }\n  return (\n    <div className=\"forms\">\n      <Form className=\"border\">\n        <h2>Please Sign in</h2>\n        <Form.Group controlId=\"email\">\n          <Form.Label className=\"size\">Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n          {validationError.email.error && (\n            <Form.Text style={{ color: \"red\" }}>\n              {validationError.email.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n          {validationError.password.error && (\n            <Form.Text style={{ color: \"red\" }}>\n              {validationError.password.message}\n            </Form.Text>\n          )}\n        </Form.Group>\n\n        <button\n          type=\"submit\"\n          className=\"primaryButton\"\n          onClick={handleSignInSubmit}\n        >\n          {isLoading && <Spinner className=\"spinner-button\" animation=\"border\" role=\"status\" size=\"sm\"/>} Sign In\n        </button>\n\n        <div>\n          <small>\n            Forgot password?{\" \"}\n            <Link to=\"/grokit-frontend/resetpassword\">Reset password</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an{\" \"}\n            <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(SignIn);\n","import React, { useState } from \"react\";\nimport { Form, Button, Spinner } from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport passwordValidator from \"password-validator\";\nimport emailValidator from \"email-validator\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\n\nconst passwordSchema = new passwordValidator();\npasswordSchema\n  .is()\n  .min(8)\n  .has()\n  .uppercase()\n  .has()\n  .lowercase()\n  .has()\n  .digits()\n  .has()\n  .symbols();\n\nfunction SignUp({ history }) {\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [validationError, setValidationError] = useState({\n    name: { error: false, message: \"Please enter a name.\" },\n    email: { error: false, message: \"Please enter a valid email.\" },\n    password: {\n      error: false,\n      message:\n        \"Please enter a valid password. Required: 8 characters, lowercase, uppercase, special characters, numbers.\",\n    },\n    confirmPassword: { error: false, message: \"Passwords do not match.\" },\n  });\n\n  const { setLoggedIn, setUserId, setName } = useAppContext();\n  const [fields, handleFieldChange] = useFormFields({\n    newName: \"\",\n    newEmail: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n  });\n\n  function clearValidationErrors() {\n    const updatedValidationError = Object.assign({}, validationError);\n    updatedValidationError.name.error = false;\n    updatedValidationError.email.error = false;\n    updatedValidationError.password.error = false;\n    updatedValidationError.confirmPassword.error = false;\n    setValidationError(updatedValidationError);\n  }\n\n  async function handleNewUserSubmit(event) {\n    event.preventDefault();\n    clearValidationErrors();\n\n    if (fields.newName.length === 0) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.name.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (\n      fields.newEmail.length === 0 || !emailValidator.validate(fields.newEmail)\n    ) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.email.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (!passwordSchema.validate(fields.newPassword)) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.password.error = true;\n      setValidationError(updatedValidationError);\n    }\n    if (fields.newPassword !== fields.confirmPassword) {\n      const updatedValidationError = Object.assign({}, validationError);\n      updatedValidationError.confirmPassword.error = true;\n      setValidationError(updatedValidationError);\n    } else {\n      setIsLoading(true);\n      try {\n        const newUser = await Auth.signUp({\n          username: fields.newEmail,\n          password: fields.newPassword,\n          attributes: { name: fields.newName },\n        });\n        setNewUser(newUser);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        onError(error);\n      }\n    }\n  }\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.confirmSignUp(fields.newEmail, fields.confirmationCode);\n      await Auth.signIn(fields.newEmail, fields.newPassword);\n      const userInfo = await Auth.currentUserInfo();\n      const user = {\n        userId: userInfo.username,\n        name: userInfo.attributes.name,\n      };\n      axios\n        .post(\n          \"https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/users\",\n          user\n        )\n        .then((response) => {\n          setUserId(user.userId);\n          setName(user.name);\n          setLoggedIn(true);\n          history.push(\"/grokit-frontend/\");\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    } catch (e) {\n      setIsLoading(false);\n      onError(e);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <div className=\"forms\">\n        <Form onSubmit={handleConfirmationSubmit}>\n          <Form.Group controlId=\"confirmationCode\" bsSize=\"large\">\n            <Form.Label className=\"forms__confirmationTitle\">\n              Confirmation Code\n            </Form.Label>\n            <Form.Text className=\"forms__confirmationText\">\n              We have just sent you a confirmation code, please check your email\n            </Form.Text>\n            <Form.Control\n              type=\"tel\"\n              placeholder=\"Confirmation Code\"\n              onChange={handleFieldChange}\n              value={fields.confirmationCode}\n            />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n          {isLoading && <Spinner className=\"spinner-button\" animation=\"border\" role=\"status\" size=\"sm\"/>} Verify\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderForm() {\n    return (\n      <div className=\"forms\">\n        <Form className=\"border\">\n          <h2>Create an account</h2>\n          <Form.Group controlId=\"newName\">\n            <Form.Label> Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={fields.newName}\n              onChange={handleFieldChange}\n            />\n            {validationError.name.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.name.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <Form.Group controlId=\"newEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={fields.newEmail}\n              onChange={handleFieldChange}\n            />\n            {validationError.email.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.email.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={fields.newPassword}\n              onChange={handleFieldChange}\n            />\n            {validationError.password.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.password.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={fields.confirmPassword}\n              onChange={handleFieldChange}\n            />\n            {validationError.confirmPassword.error && (\n              <Form.Text style={{ color: \"red\" }}>\n                {validationError.confirmPassword.message}\n              </Form.Text>\n            )}\n          </Form.Group>\n\n          <button\n            type=\"submit\"\n            className=\"primaryButton\"\n            onClick={handleNewUserSubmit}\n          >\n            {isLoading && <Spinner className=\"spinner-button\" animation=\"border\" role=\"status\" size=\"sm\"/>} Sign up\n          </button>\n          <div>\n            <small>\n              Already have an account?{\" \"}\n              <Link to=\"/grokit-frontend/signin\">Sign in</Link>\n            </small>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n  return newUser === null ? renderForm() : renderConfirmationForm();\n}\n\nexport default withRouter(SignUp);\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { Form, Button, Spinner } from \"react-bootstrap\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  const [fields, handleFieldChange] = useFormFields({\n    code: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      onError(error);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await Auth.forgotPasswordSubmit(fields.email, fields.code, fields.password);\n      setConfirmed(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      onError(error);\n    }\n  }\n  function renderRequestCodeForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleSendCodeClick}>\n          <Form.Group bsSize=\"large\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control autoFocus type=\"email\" value={fields.email} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n          {isLoading && <Spinner className=\"spinner-button\" animation=\"border\" role=\"status\" size=\"sm\"/>} Send Confirmation\n          </Button>\n        </Form>\n        <div>\n          <small>\n            Want to try to sign in? <Link to=\"/grokit-frontend/signin\">Sign In</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </div>\n    );\n  }\n  function renderConfirmationForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleConfirmClick}>\n          <Form.Group bsSize=\"large\" controlId=\"code\">\n            <Form.Label>Confirmation Code</Form.Label>\n            <Form.Control autoFocus type=\"tel\" value={fields.code} onChange={handleFieldChange} />\n            <div>Please check your email ({fields.email}) for the confirmation code.</div>\n          </Form.Group>\n          <hr />\n          <Form.Group bsSize=\"large\" controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.password} onChange={handleFieldChange} />\n          </Form.Group>\n          <Form.Group bsSize=\"large\" controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.confirmPassword} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primaryButton\">\n          {isLoading && <Spinner className=\"spinner-button\" animation=\"border\" role=\"status\" size=\"sm\"/>} Confirm\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderSuccessMessage() {\n    return (\n      <div className=\"success\">\n        <p>Your password has been reset.</p>\n        <p>\n          Click <Link to=\"/grokit-frontend/signin\">here </Link>to sign in with your new password.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ResetPassword forms\">\n      {!codeSent ? renderRequestCodeForm() : !confirmed ? renderConfirmationForm() : renderSuccessMessage()}\n    </div>\n  );\n}\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\n\nimport { AppContext } from \"./libs/ContextLib.js\";\n\nimport NavBar from \"components/NavBar/NavBar\";\nimport ProjectsPage from \"pages/ProjectsPage\";\nimport HomePage from \"pages/HomePage\";\nimport IntroPage from \"pages/IntroPage/IntroPage\";\nimport ChartsPage from \"pages/ChartsPage\";\nimport SignIn from \"components/Forms/SignIn/SignIn\";\nimport SignUp from \"components/Forms/SignUp/SignUp\";\nimport ResetPassword from \"components/Forms/ResetPassword/ResetPassword\";\n\nfunction App() {\n  // listen for use of mouse\n  document.body.addEventListener('mousedown', function () {\n    document.body.classList.add('using-mouse');\n  });\n\n  // listen for use of tab\n  document.body.addEventListener('keydown', function (event) {\n    if (event.keyCode === 9) {\n      document.body.classList.remove('using-mouse');\n    }\n  });\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [name, setName] = useState(); //this is good!\n  const [projects, setProjects] = useState([]);\n  const [loadingProjects, setLoadingProjects] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      setLoggedIn(true);\n      const userInfo = await Auth.currentUserInfo();\n      setUserId(userInfo.username);\n      setName(userInfo.attributes.name); // this is good!\n    } catch (e) { }\n    setIsAuthenticating(false);\n  }\n\n  useEffect(() => {\n    if (userId) {\n      setLoadingProjects(true);\n      axios\n        .get(\n          `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects?userId=${userId}`\n        )\n        .then((response) => {\n          setProjects(response.data.projects);\n          setLoadingProjects(false);\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    }\n  }, [userId]);\n\n  const addProject = ({ name = \"\" }) => {\n    const newProject = { name, userId, datePracticed: Date.now() };\n    axios\n      .post(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects`,\n        newProject\n      )\n      .then(({ data: { projects: resProject = [] } = {} }) => {\n        setProjects([...projects, ...resProject]);\n      })\n      .catch((error) => {\n        console.log(\"Error posting project\", error);\n      });\n  };\n\n  const addSkill = (projectId, skillName) => {\n    const newSkill = { name: skillName, projectId: projectId };\n    axios\n      .post(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills`,\n        newSkill\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            if (skills.length === 0) {\n              return {\n                ...project,\n                skillToDo: response.data.skill.skillId,\n                skills: [response.data.skill],\n              };\n            }\n            return { ...project, skills: [...skills, response.data.skill] };\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error posting skill\", error);\n      });\n  };\n\n  const updatePractisedSkill = (practisedSkill, difficulty) => {\n    const { projectId, skillId } = practisedSkill;\n\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/markAsPractised/${difficulty}`,\n        practisedSkill\n      )\n      .then((response) => {\n        const updatedSkill = response.data.practisedSkill;\n        window.alert(`Great job. You'll see this skill again in about ${updatedSkill.lastGap1} day${updatedSkill.lastGap1 === 1 ? \"\" : \"s\"}.`);\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            project.datePractised = moment().format(\"YYYY-MM-DD\");\n            project.skillToDo = null;\n            skills.map((skill) => {\n              if (skill.skillId === skillId) {\n                skill = updatedSkill;\n              }\n              return skill;\n            });\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  };\n\n  const deleteSkill = (skillId, skillToDo) => {\n    axios\n      .delete(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`\n      )\n      .then(() => {\n        if (skillId === skillToDo) {\n          return axios\n            .get(\n              `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects?userId=${userId}`\n            )\n            .then((response) => {\n              setProjects(response.data.projects);\n            })\n            .catch((error) => {\n              console.log(\"Error fetching data\", error);\n            });\n        }\n        else {\n          const updatedProjects = projects.map((project) => {\n            const { skills = [] } = project;\n            return {\n              ...project,\n              skills: skills.filter((skill) => skill.skillId !== skillId),\n            };\n          });\n          setProjects(updatedProjects);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error deleting skill\", error);\n      });\n  };\n\n  const editSkillName = (skillId, skillName) => {\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`,\n        { name: skillName }\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          skills.map((skill) => {\n            if (skill.skillId === skillId) {\n              skill.name = skillName;\n            }\n            return skill;\n          });\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  const deleteProject = (projectId) => {\n    axios\n      .delete(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`\n      )\n      .then((response) => {\n        const updatedProjects = projects.filter((project) =>\n          project.projectId !== projectId ? project : null\n        );\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting project\");\n      });\n  };\n\n  const editProjectName = (projectId, projectName) => {\n    axios\n      .put(\n        `https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`,\n        { name: projectName }\n      )\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          if (project.projectId === projectId) {\n            project.name = projectName;\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  return (\n    !isAuthenticating && (\n      <Router>\n        <AppContext.Provider\n          value={{\n            loggedIn,\n            setLoggedIn,\n            userId,\n            setUserId,\n            name,\n            setName,\n            loadingProjects,\n          }}\n        >\n          <NavBar />\n          <Container className=\"App\">\n            <Switch>\n              {!loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <IntroPage />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signup\">\n                    <SignUp />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signin\">\n                    <SignIn />\n                  </Route>\n                  <Route path=\"/grokit-frontend/resetpassword\">\n                    <ResetPassword />\n                  </Route>\n                </>\n              )}\n              {loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <HomePage\n                      projects={projects}\n                      updatePractisedSkill={updatePractisedSkill}\n                      addProject={addProject}\n                    />\n                  </Route>\n                  <Route path=\"/grokit-frontend/projects\">\n                    <ProjectsPage\n                      addProject={addProject}\n                      projects={projects}\n                      addSkill={addSkill}\n                      deleteSkill={deleteSkill}\n                      deleteProject={deleteProject}\n                      editSkillName={editSkillName}\n                      editProjectName={editProjectName}\n                    />\n                  </Route>\n                  <Route path=\"/grokit-frontend/charts\">\n                    <ChartsPage />\n                  </Route>\n                </>\n              )}\n            </Switch>\n          </Container>\n        </AppContext.Provider>\n      </Router>\n    )\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Amplify } from \"aws-amplify\";\nimport config from \"./config\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nAmplify.configure({\n  Auth: {\n    mandatorySignId: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}