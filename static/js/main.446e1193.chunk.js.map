{"version":3,"sources":["config.js","libs/ContextLib.js","libs/HooksLib.js","libs/ErrorLib.js","components/Forms/SignIn/SignIn.js","components/Forms/SignUp/SignUp.js","components/Forms/ResetPassword/ResetPassword.js","components/CreateNewProject/Modal.js","components/CreateNewProject/NewProject.js","components/AddSkill/AddSkill.js","components/Modals/SingleInputModal.js","components/ProjectList/SkillItem/EditSkill/EditSkill.js","components/ProjectList/SkillItem/SkillItem.js","components/ProjectList/ProjectItem/EditProject/EditProject.js","components/ProjectList/ProjectItem/ProjectItem.js","components/ProjectList/ProjectList.js","components/ProjectList/ExampleProjects/exampleProjectData.js","components/ProjectList/SkillItem/ExampleSkillItem.js","components/ProjectList/ExampleProjects/ExampleProject.js","components/SkillsToDo/NoProjects.js","components/SkillsToDo/SkillToDoItem/PractisedToday.js","components/Modals/OptionSelectModal.js","components/SkillsToDo/SkillToDoItem/MarkSkillAsPractised.js","components/SkillsToDo/SkillToDoItem/Skill.js","components/SkillsToDo/SkillToDoItem/NoSkill.js","components/SkillsToDo/SkillToDoItem/SkillToDoItem.js","components/Timer/Timer.js","components/SkillsToDo/SkillsToDo.js","components/SkillsToDo/HomePage.js","components/NavBar/NavBar.js","components/IntroPage/IntroPage.js","App.js","serviceWorker.js","index.js"],"names":["REGION","USER_POOL_ID","APP_CLIENT_ID","AppContext","createContext","useAppContext","useContext","useFormFields","initialState","useState","fields","setValues","event","target","id","value","onError","error","message","toString","Error","alert","withRouter","history","setLoggedIn","setUserId","usernameError","setUsernameError","email","password","handleFieldChange","e","a","preventDefault","length","Auth","signIn","currentUserInfo","userInfo","username","push","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","Text","style","color","onClick","to","newUser","setNewUser","newUsernameError","setNewUsernameError","newName","newEmail","newPassword","confirmPassword","confirmationCode","handleNewUserSubmit","signUp","attributes","name","handleConfirmationSubmit","confirmSignUp","user","userId","axios","post","then","response","catch","console","log","Button","variant","onSubmit","bsSize","block","ResetPassword","code","codeSent","setCodeSent","confirmed","setConfirmed","handleSendCodeClick","forgotPassword","handleConfirmClick","forgotPasswordSubmit","autoFocus","Modal","title","status","handleClose","onSave","project","setProject","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Footer","disabled","NewProject","addProject","smShow","setSmShow","AddSkill","projectId","addSkill","skill","setSkill","addAndResetSkill","onKeyPress","key","SingleInputModal","startValue","setValue","EditSkill","skillId","editSkillName","skillName","SkillItem","deleteSkill","Row","window","confirm","EditProject","editProjectName","projectName","ProjectItem","skills","open","deleteProject","cardOpen","setCardOpen","Card","border","aria-controls","aria-expanded","Collapse","in","map","ProjectList","projects","timesTablesProject","javascriptProject","footballProject","ExampleSkillItem","ExampleProject","NoProjects","updatePractisedSkill","Col","PractisedToday","OptionSelectModal","saveChanges","difficulty","MarkSkillAsPractised","Skill","NoSkill","SkillToDoItem","datePractised","skillToDo","moment","isSame","Timer","duration","playing","setPlaying","timerKey","setTimerKey","timerDuration","stratTime","Date","now","remainingTime","renderTime","dimension","time","timerProps","isPlaying","strokeWidth","colors","Container","onComplete","initialRemainingTime","elapsedTime","totalElapsedTime","SkillsToDo","showTimer","setShowTimer","find","HomePage","expanded","setExpanded","loggedIn","signOut","Navbar","bg","expand","Brand","Toggle","Nav","IntroPage","Image","src","rounded","App","isAuthenticating","setIsAuthenticating","setProjects","currentSession","useEffect","onLoad","get","data","newProject","datePracticed","resProject","Provider","NavBar","exact","path","practisedSkill","put","updatedSkill","updatedProjects","format","newSkill","delete","filter","Boolean","location","hostname","match","Amplify","configure","mandatorySignId","region","config","userPoolId","userPoolWebClientId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.446e1193.chunk.js","sourcesContent":["export default {\n    cognito: {\n      REGION: \"eu-west-2\",\n      USER_POOL_ID: \"eu-west-2_kiqr3R2mb\",\n      APP_CLIENT_ID: \"5dkf83sgld69f2nvedggntas11\",\n    },\n  };","import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function (event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value,\n      });\n    },\n  ];\n}\n","export function onError(error) {\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    message = error.message;\n  }\n\n  alert(message);\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignIn({ history }) {\n  const { setLoggedIn, setUserId } = useAppContext();\n  const [usernameError, setUsernameError] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n  });\n  async function handleSignInSubmit(e) {\n    e.preventDefault();\n\n    if (fields.email.length === 0 || fields.password.length === 0) {\n      setUsernameError(true);\n    } else {\n      try {\n        await Auth.signIn(fields.email, fields.password);\n        const userInfo = await Auth.currentUserInfo();\n        setLoggedIn(true);\n        setUserId(userInfo.username);\n        history.push(\"/grokit-frontend/\");\n      } catch (e) {\n        onError(e);\n      }\n    }\n  }\n  return (\n    <div className=\"forms\">\n      <Form className=\"border\">\n        <h2>Please Sign in</h2>\n        <Form.Group controlId=\"email\">\n          <Form.Label className=\"size\">Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" value={fields.email} onChange={handleFieldChange} />\n          {usernameError && <Form.Text style={{ color: \"red\" }}>Please enter a valid email.</Form.Text>}\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" value={fields.password} onChange={handleFieldChange} />\n          {usernameError && <Form.Text style={{ color: \"red\" }}>Please enter a valid password.</Form.Text>}\n        </Form.Group>\n\n        <button type=\"button\" className=\"primaryButton\" onClick={handleSignInSubmit}>\n          Sign In\n        </button>\n\n        <div>\n          <small>\n            Forgot password? <Link to=\"/grokit-frontend/resetpassword\">Reset password</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(SignIn);\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { useAppContext } from \"libs/ContextLib.js\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignUp({ history, setUserId = () => {} }) {\n  const [newUser, setNewUser] = useState(null);\n  const [newUsernameError, setNewUsernameError] = useState(false);\n  const { setLoggedIn } = useAppContext();\n  const [fields, handleFieldChange] = useFormFields({\n    newName: \"\",\n    newEmail: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n  });\n  async function handleNewUserSubmit(event) {\n    event.preventDefault();\n\n    if (\n      fields.newName === 0 ||\n      fields.newEmail.length === 0 ||\n      fields.newPassword.length === 0 ||\n      fields.confirmPassword === 0 ||\n      fields.newPassword !== fields.confirmPassword\n    ) {\n      setNewUsernameError(true);\n    } else {\n      try {\n        const newUser = await Auth.signUp({\n          username: fields.newEmail,\n          password: fields.newPassword,\n          attributes: { name: fields.newName },\n        });\n        setNewUser(newUser);\n      } catch (error) {\n        onError(error);\n      }\n    }\n  }\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    try {\n      await Auth.confirmSignUp(fields.newEmail, fields.confirmationCode);\n      await Auth.signIn(fields.newEmail, fields.newPassword);\n      const userInfo = await Auth.currentUserInfo();\n      const user = { userId: userInfo.username, name: userInfo.attributes.name };\n      axios\n        .post(\"https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/users\", user)\n        .then((response) => {\n          setUserId(user.userId);\n          setLoggedIn(true);\n          history.push(\"/grokit-frontend/\");\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    } catch (e) {\n      onError(e);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <div className=\"forms\">\n        <Form onSubmit={handleConfirmationSubmit}>\n          <Form.Group controlId=\"confirmationCode\" bsSize=\"large\">\n            <Form.Label>Confirmation Code</Form.Label>\n            <Form.Control type=\"tel\" placeholder=\"Confirmation Code\" onChange={handleFieldChange} value={fields.confirmationCode} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"primary\">\n            Verify\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderForm() {\n    return (\n      <div className=\"forms\">\n        <Form className=\"border\">\n          <h2>Create an account</h2>\n          <Form.Group controlId=\"newName\">\n            <Form.Label> Name</Form.Label>\n            <Form.Control type=\"name\" placeholder=\"Enter name\" value={fields.newName} onChange={handleFieldChange} />\n            {newUsernameError && <Form.Text style={{ color: \"red\" }}>Please enter a valid name.</Form.Text>}\n          </Form.Group>\n\n          <Form.Group controlId=\"newEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" value={fields.newEmail} onChange={handleFieldChange} />\n            {newUsernameError && <Form.Text style={{ color: \"red\" }}>Please enter a valid email.</Form.Text>}\n          </Form.Group>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Enter password\" value={fields.newPassword} onChange={handleFieldChange} />\n            {newUsernameError && <Form.Text style={{ color: \"red\" }}>Please enter a valid password.</Form.Text>}\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Confirm password\" value={fields.confirmPassword} onChange={handleFieldChange} />\n            {newUsernameError && <Form.Text style={{ color: \"red\" }}>Please enter a valid password.</Form.Text>}\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" className=\"primaryButton\" onClick={handleNewUserSubmit}>\n            Sign up\n          </Button>\n          <div>\n            <small>\n              Already have an account? <Link to=\"/grokit-frontend/signin\">Sign in</Link>\n            </small>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n  return newUser === null ? renderForm() : renderConfirmationForm();\n}\n\nexport default withRouter(SignUp);\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { useFormFields } from \"libs/HooksLib.js\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { onError } from \"libs/ErrorLib.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResetPassword() {\n  const [fields, handleFieldChange] = useFormFields({\n    code: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    try {\n      await Auth.forgotPasswordSubmit(fields.email, fields.code, fields.password);\n      setConfirmed(true);\n    } catch (error) {\n      onError(error);\n    }\n  }\n  function renderRequestCodeForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleSendCodeClick}>\n          <Form.Group bsSize=\"large\" controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control autoFocus type=\"email\" value={fields.email} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"colour\">\n            Send Confirmation\n          </Button>\n        </Form>\n        <div>\n          <small>\n            Want to try to sign in? <Link to=\"/grokit-frontend/signin\">Sign In</Link>\n          </small>\n        </div>\n        <div>\n          <small>\n            No account? Create an <Link to=\"/grokit-frontend/signup\">account</Link>\n          </small>\n        </div>\n      </div>\n    );\n  }\n  function renderConfirmationForm() {\n    return (\n      <div className=\"border\">\n        <Form onSubmit={handleConfirmClick}>\n          <Form.Group bsSize=\"large\" controlId=\"code\">\n            <Form.Label>Confirmation Code</Form.Label>\n            <Form.Control autoFocus type=\"tel\" value={fields.code} onChange={handleFieldChange} />\n            <div>Please check your email ({fields.email}) for the confirmation code.</div>\n          </Form.Group>\n          <hr />\n          <Form.Group bsSize=\"large\" controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.password} onChange={handleFieldChange} />\n          </Form.Group>\n          <Form.Group bsSize=\"large\" controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type=\"password\" value={fields.confirmPassword} onChange={handleFieldChange} />\n          </Form.Group>\n          <Button block type=\"submit\" bsSize=\"large\" className=\"colour\">\n            Confirm\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n  function renderSuccessMessage() {\n    return (\n      <div className=\"success\">\n        <p>Your password has been reset.</p>\n        <p>\n          Click <Link to=\"/signin\">here </Link>to sign in with your new password.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ResetPassword forms\">\n      {!codeSent ? renderRequestCodeForm() : !confirmed ? renderConfirmationForm() : renderSuccessMessage()}\n    </div>\n  );\n}\nexport default ResetPassword;\n","import React, { useState } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\n\nfunction Modal({ title = \"\", status = false, handleClose = () => {}, onSave = () => {} }) {\n  const [project, setProject] = useState({});\n\n  const updateProject = ({ target: { value = \"\", name = \"\" } = {} }) => {\n    setProject({ ...project, [name]: value });\n  };\n\n  const saveChanges = () => {\n    onSave(project);\n  };\n\n  const { name } = project;\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id=\"example-modal-sizes-title-sm\">{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label>\n          <input type=\"text\" placeholder=\"Enter project name\" value={name} name=\"name\" onChange={updateProject} />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <button type=\"button\" className=\"secondaryButton\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"primaryButton\" onClick={saveChanges} disabled={!name}>\n          Save\n        </button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Modal from \"components/CreateNewProject/Modal\";\n\nfunction NewProject({ addProject = () => {} }) {\n  const [smShow, setSmShow] = useState(false);\n\n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (project) => {\n    addProject(project);\n    handleClose();\n  };\n\n  return (\n    <>\n      <div className=\"newProject\" onClick={handleShow}>\n        <p className=\"grokitFont\">Add New Project</p>\n        <button type=\"button\" className=\"newProject__addIcon\">\n          +\n        </button>\n      </div>\n      {smShow ? <Modal title=\"Create New Project\" status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n    </>\n  );\n}\n\nexport default NewProject;\n","import React, { useState } from \"react\";\n\nfunction AddSkill({ projectId, addSkill = () => {} }) {\n  const [skill, setSkill] = useState(\"\");\n\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\" && skill.length) {\n      addAndResetSkill();\n    }\n  };\n\n  const modifySkill = ({ target: { value = \"\" } = {} }) => {\n    setSkill(value);\n  };\n\n  const addAndResetSkill = () => {\n    addSkill(projectId, skill);\n    setSkill(\"\");\n  };\n\n  return (\n    <div className=\"addSkill\">\n      <input type=\"text\" placeholder=\"Add New Skill...\" value={skill} onChange={modifySkill} onKeyPress={handleKeyPress} />\n      <span onClick={addAndResetSkill}>+</span>\n    </div>\n  );\n}\n\nexport default AddSkill;\n","import React, { useState } from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction SingleInputModal({ \n  startValue = \"\", \n  title = \"\", \n  placeholder = \"\",\n  status = false, \n  handleClose = () => {}, \n  onSave = () => {} }) {\n\n  const [value, setValue] = useState(startValue);\n\n  const saveChanges = () => {\n    onSave(value);\n  };\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        <label>\n          <input type=\"text\" placeholder={placeholder} value={value} onChange={e => setValue(e.target.value)} />\n        </label>\n      </BootstrapModal.Body>\n      <BootstrapModal.Footer>\n        <Button variant=\"danger\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"success\" onClick={saveChanges} disabled={!value}>\n          Save\n        </Button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default SingleInputModal;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport SingleInputModal from 'components/Modals/SingleInputModal';\n\nfunction EditSkill({ skillId, name, editSkillName = () => {} }) {\n    const [smShow, setSmShow] = useState(false);\n\n    \n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (skillName) => {\n      editSkillName(skillId, skillName);\n      handleClose();\n  }\n\n    return (\n        <>\n        <Button onClick={handleShow}>Edit name</Button>\n        {smShow ? <SingleInputModal title=\"Edit skill name\" startValue={name} placeholder=\"Enter a new skill name\" status={smShow} handleClose={handleClose} onSave={onSave}/> : \"\"}\n        </>\n    );\n}\n\nexport default EditSkill;\n","import React from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport EditSkill from \"components/ProjectList/SkillItem/EditSkill/EditSkill\";\n\nfunction SkillItem({ skillId, name, deleteSkill = () => { }, editSkillName = () => {} }) {\n\n    const handleDeleteSkillButton = () => {\n        if (window.confirm(`Are you sure you wish to delete \"${name}\"`)) {\n            deleteSkill(skillId);\n        }\n    }    \n\n    return (\n        <Row>\n            <p key={skillId}>{name}</p>\n            <Button onClick={handleDeleteSkillButton}>Delete</Button>\n            <EditSkill skillId = {skillId} name={name} editSkillName = {editSkillName} />\n        </Row>\n    );\n}\n\nexport default SkillItem;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport SingleInputModal from 'components/Modals/SingleInputModal';\n\nfunction EditProject({ projectId, name, editProjectName = () => {} }) {\n    const [smShow, setSmShow] = useState(false);\n\n\n    const handleClose = () => setSmShow(false);\n    const handleShow = () => setSmShow(true);\n\n    const onSave = (projectName) => {\n        editProjectName(projectId, projectName);\n        handleClose();\n    }\n\n    return (\n        <>\n            <Button onClick={handleShow}>Edit name</Button>\n            {smShow ? <SingleInputModal title=\"Edit project name\" placeholder = \"Enter new project name\" startValue={name} status={smShow} handleClose={handleClose} onSave={onSave} /> : \"\"}\n        </>\n    );\n}\n\nexport default EditProject;\n","import React, { useState } from \"react\";\nimport { Button, Card, Collapse } from \"react-bootstrap\";\nimport AddSkill from \"components/AddSkill/AddSkill\";\nimport SkillItem from \"components/ProjectList/SkillItem/SkillItem\";\nimport EditProject from \"components/ProjectList/ProjectItem/EditProject/EditProject\";\n\nfunction ProjectItem({ \n  project: { projectId, name, skills = [] } = {}, \n  open = true, \n  addSkill = () => {},\n  deleteSkill = () => {}, \n  deleteProject = () => {}, \n  editSkillName = () => {}, \n  editProjectName = () => {} \n}) {\n  \n  const [cardOpen, setCardOpen] = useState(false);\n\n  const handleDeleteProjectButton = () => {\n    if (window.confirm(`Are you sure you wish to delete \"${name}\"? This will delete all associated skills.`)) {\n      deleteProject(projectId);\n    }\n  }\n\n  return (\n    <Card key={projectId} style={{ border: \"2px solid black\" }}>\n      <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open} onClick={() => setCardOpen(!cardOpen)}>\n        <h1>{name}</h1>\n      </Card.Header>\n      <Collapse in={cardOpen}>\n        <Card.Body>\n          <AddSkill projectId={projectId} addSkill={addSkill} />\n          {skills.map(({skillId, name}) => (\n            <SkillItem key={skillId} skillId={skillId} name={name} deleteSkill={deleteSkill} editSkillName={editSkillName}/>\n          ))}\n          <Button onClick={handleDeleteProjectButton}>Delete Project</Button>\n          <EditProject projectId = {projectId} name={name} editProjectName = {editProjectName}/>\n        </Card.Body>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport default ProjectItem;\n","import React from \"react\";\n\nimport ProjectItem from \"./ProjectItem/ProjectItem\";\n\nfunction ProjectList({ \n  projects = [], \n  addSkill = () => {}, \n  deleteSkill = () => {},\n  deleteProject = () => {},\n  editSkillName = () => {},\n  editProjectName = () => {} \n}) {\n  return (\n    <>\n      {projects.map((project) => (\n        <ProjectItem\n          key={project.projectId}\n          project={project}\n          addSkill={addSkill}\n          deleteProject={deleteProject}\n          deleteSkill={deleteSkill}\n          editSkillName={editSkillName}\n          editProjectName={editProjectName}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default ProjectList;\n","export const timesTablesProject = { \n    name: \"Times tables\", \n    skills: [\n        {name:\"Two times tables\"}, \n        {name:\"Three times tables\"},\n        {name:\"Four times tables\"},\n        {name:\"Five times tables\"},\n        {name:\"Six times tables\"},\n        {name:\"Seven times tables\"},\n        {name:\"Eight times tables\"},\n        {name:\"Nine times tables\"},\n        {name:\"Ten times tables\"},\n        {name:\"Eleven times tables\"},\n        {name:\"Twelve times tables\"}\n    ]};\n\n    export const javascriptProject = { \n        name: \"Javascript Array Methods\", \n        skills: [\n            {name:\"Map\"}, \n            {name:\"Reduce\"},\n            {name:\"Filter\"},\n            {name:\"ForEach\"}\n        ]};\n\n        export const footballProject = { \n            name: \"Football Skills\", \n            skills: [\n                {name:\"Shooting\"}, \n                {name:\"Goalkeeping\"},\n                {name:\"Dribbling\"},\n                {name:\"Throw ins\"}\n            ]};","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\n\nfunction ExampleSkillItem({ name }) {    \n\n    return (\n        <Row>\n            <p key={name}>{name}</p>\n        </Row>\n    );\n}\n\nexport default ExampleSkillItem;\n","import React, { useState } from \"react\";\nimport { Card, Collapse } from \"react-bootstrap\";\nimport ExampleSkillItem from \"components/ProjectList/SkillItem/ExampleSkillItem\";\n\nfunction ExampleProject({project: { name, skills = [] } = {},open = true}) {    \n    const [cardOpen, setCardOpen] = useState(false);\n\n    return (\n        <Card key={name} style={{ border: \"2px solid black\" }}>\n            <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open} onClick={() => setCardOpen(!cardOpen)}>\n                <h1>{name}</h1>\n            </Card.Header>\n            <Collapse in={cardOpen}>\n                <Card.Body>\n                    {skills.map(({ name }) => (\n                        <ExampleSkillItem key={name} name={name}/>\n                    ))}\n                </Card.Body>\n            </Collapse>\n        </Card>\n    );\n}\n\nexport default ExampleProject;\n","import React from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport {timesTablesProject, javascriptProject, footballProject} from 'components/ProjectList/ExampleProjects/exampleProjectData';\nimport ExampleProject from 'components/ProjectList/ExampleProjects/ExampleProject';\n\nfunction NoProjects({ projects = [], open = true, updatePractisedSkill = () => { }, addProject = () => {} }) {\n\n    return (\n        <>\n            <div>\n                Welcome to grokit. Let's get started by adding some projects that you want to grok. <br />\n          Look at the the example projects below and then click <Link to=\"/projects\">here</Link> to start adding your own.\n        </div>\n        <Row>\n            <Col>\n            <ExampleProject addProject={addProject} projects = {projects} project = {timesTablesProject} />\n            </Col>\n            <Col>\n            <ExampleProject addProject={addProject} projects = {projects} project = {javascriptProject} />\n            </Col>\n            <Col>\n            <ExampleProject addProject={addProject} projects = {projects} project = {footballProject} />\n            </Col>\n        </Row>\n        </>\n\n    );\n}\n\nexport default NoProjects;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction PractisedToday({ projectName = \"\" }) {\n    return (\n        <Row>{projectName}: Done for today</Row>\n    )\n}\n\nexport default PractisedToday;\n","import React from \"react\";\nimport BootstrapModal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction OptionSelectModal({ \n  title = \"\", \n  status = false, \n  handleClose = () => {}, \n  onSave = () => {} }) {\n\n\n  const saveChanges = (difficulty) => {\n    onSave(difficulty);\n  };\n\n  return (\n    <BootstrapModal size=\"sm\" show={status} onHide={handleClose} aria-labelledby=\"example-modal-sizes-title-sm\">\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title id={title}>{title}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Footer>\n        <Button variant=\"success\" onClick={() => saveChanges(\"easy\")}>\n          Easy\n        </Button>\n        <Button variant=\"success\" onClick={() => saveChanges(\"medium\")}>\n          Normal\n        </Button>\n        <Button variant=\"success\" onClick={() => saveChanges(\"hard\")}>\n          Hard\n        </Button>\n      </BootstrapModal.Footer>\n    </BootstrapModal>\n  );\n}\n\nexport default OptionSelectModal;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport OptionSelectModal from 'components/Modals/OptionSelectModal';\n\nfunction MarkSkillAsPractised({skill={}, updatePractisedSkill = () => {}}) {\n    const [smShow, setSmShow] = useState(false);\n\n    \n  const handleClose = () => setSmShow(false);\n  const handleShow = () => setSmShow(true);\n\n  const onSave = (difficulty) => {\n      updatePractisedSkill(skill,difficulty)\n      handleClose();\n  }\n\n    return (\n        <>\n        <Button onClick={handleShow}>Done</Button>\n        {smShow ? <OptionSelectModal title=\"How did the practice feel?\" status={smShow} handleClose={handleClose} onSave={onSave}/> : \"\"}\n        </>\n    );\n}\n\nexport default MarkSkillAsPractised;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\nimport MarkSkillAsPractised from './MarkSkillAsPractised';\n\n\nfunction Skill({ projectName = \"\", skill={}, updatePractisedSkill = () => { } }) {\n\n    return (\n        <Row>\n            <p>{projectName}: {skill.name}</p>\n            <MarkSkillAsPractised updatePractisedSkill = {updatePractisedSkill} skill={skill}/>\n        </Row>\n    )\n}\n\nexport default Skill;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\n\n\nfunction NoSkill({ projectName = \"\" }) {\n    return (\n        <Row>{projectName}: No task today</Row>\n    )\n}\n\nexport default NoSkill;\n","import React from 'react';\nimport moment from 'moment';\nimport PractisedToday from './PractisedToday';\nimport Skill from './Skill';\nimport NoSkill from './NoSkill';\n\n\nfunction SkillToDoItem({ datePractised = \"\", projectName = \"\", skillToDo, skill = {}, updatePractisedSkill = () => { } }) {\n    if (moment(datePractised).isSame(moment(), \"day\")) {\n        return (<PractisedToday projectName={projectName} />)\n    }\n    else {\n        if (skillToDo) {\n            return (<Skill projectName={projectName} skill={skill} updatePractisedSkill={updatePractisedSkill} />)\n        }\n        else {\n            return (<NoSkill projectName={projectName} />)\n        }\n    }\n};\n\nexport default SkillToDoItem;\n","import React, { useState } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nfunction Timer({ duration }) {\n  const [playing, setPlaying] = useState(false);\n  const [timerKey, setTimerKey] = useState(1);\n\n  const timerDuration = duration;\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + timerDuration;\n  const remainingTime = endTime - stratTime;\n  const minuteSeconds = 60;\n\n  const getTimeSeconds = (time) => (minuteSeconds - time) | 0;\n  const getTimeMinutes = (time) => (time / minuteSeconds) | 0;\n\n  const renderTime = (dimension, time) => {\n    return (\n      <div className=\"time-wrapper\">\n        <div className=\"time\">{time}</div>\n        <div>{dimension}</div>\n      </div>\n    );\n  };\n\n  const timerProps = {\n    isPlaying: playing,\n    size: 120,\n    strokeWidth: 8,\n    colors: [[\"#004225\"],[\"#17aa56\"]]\n  };\n\n  const handleResetClick = () => {\n    setTimerKey(timerKey + 1);\n    setPlaying(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"timer\" key={timerKey}>\n        {/* minutes */}\n        <CountdownCircleTimer\n          onComplete={() => window.alert(\"Time for a break\")}\n          {...timerProps}\n          duration={timerDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) => renderTime(\"minutes\", getTimeMinutes(timerDuration - elapsedTime))}\n        </CountdownCircleTimer>\n        {/* seconds */}\n        <CountdownCircleTimer\n          {...timerProps}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [remainingTime - totalElapsedTime > 0]}\n        >\n          {({ elapsedTime }) => renderTime(\"seconds\", getTimeSeconds(elapsedTime))}\n        </CountdownCircleTimer>\n      </Row>\n      <Row>\n        <Button onClick={() => setPlaying(true)}>Start</Button>\n        <Button onClick={() => setPlaying(false)}>Pause</Button>\n        <Button onClick={handleResetClick}>Reset</Button>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Timer;\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport SkillToDoItem from './SkillToDoItem/SkillToDoItem';\nimport Timer from 'components/Timer/Timer';\n\nfunction SkillsToDo({ projects = [], open = true, updatePractisedSkill = () => { } }) {\n  const [showTimer, setShowTimer] = useState(false);\n\n  return (\n    <>\n      {showTimer\n        ? <>\n          <button type=\"button\" className=\"primaryButton\" onClick={() => setShowTimer(false)}>Close Pomodoro Timer</button>\n          <Timer duration={1500} />\n          </>\n        : <button type=\"button\" className=\"primaryButton\" onClick={() => setShowTimer(true)}>Show Pomodoro Timer</button>}      \n      <Card style={{ border: \"2px solid black\" }}>\n        <Card.Header className=\"h4\" aria-controls=\"task-item-contents\" aria-expanded={open}>\n          <h1>Skills to practise today</h1>\n        </Card.Header>\n        <Card.Body>\n          {projects &&\n            projects.map(({ projectId, datePractised, name, skillToDo, skills = [] }) => {\n              if (!skills.length) {\n                return null;\n              }\n              const skill = skills.find(({ skillId }) => skillId === skillToDo) || {};\n\n              return (\n                <SkillToDoItem\n                  key={projectId}\n                  datePractised={datePractised}\n                  projectName={name}\n                  skill={skill}\n                  skillToDo={skillToDo}\n                  updatePractisedSkill={updatePractisedSkill}\n                />\n              );\n            })}\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default SkillsToDo;\n","import React from 'react';\n\nimport NoProjects from 'components/SkillsToDo/NoProjects';\nimport SkillsToDo from './SkillsToDo';\n\nfunction HomePage({ projects = [], open = true, updatePractisedSkill = () => {}, addProject = () => {} }) {\n\n  return (\n  projects.length === 0 ? <NoProjects projects = {projects} addProject={addProject}/> : <SkillsToDo projects={projects} updatePractisedSkill={updatePractisedSkill}/>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"libs/ContextLib.js\";\n\nfunction Header({ history }) {\n  const [expanded, setExpanded] = useState(false);\n  const { loggedIn, setLoggedIn } = useAppContext();\n\n  async function handleLogOut() {\n    await Auth.signOut();\n    setLoggedIn(false);\n    history.push(\"/grokit-frontend/\");\n  }\n\n  return (\n    <Navbar className=\"NavBar\" bg=\"dark\" variant=\"dark\" expand=\"sm\" expanded={expanded}>\n      <Navbar.Brand>GrokIt</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")} />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav onClick={() => setExpanded(false)}>\n          <Link className=\"px-3\" to=\"/grokit-frontend/\">\n            Home\n          </Link>\n          {loggedIn ? (\n            <Link className=\"px-3\" to=\"/grokit-frontend/projects\">\n              Projects\n            </Link>\n          ) : (\n            \"\"\n          )}\n        </Nav>\n        <Nav className=\"ml-auto\">\n          {loggedIn ? (\n            <button type=\"button\" className=\"secondaryButton\" onClick={handleLogOut}>\n              Log Out\n            </button>\n          ) : (\n            <>\n              <button type=\"button\" className=\"secondaryButton\" onClick={() => history.push(\"/grokit-frontend/signin\")}>\n                Log In\n              </button>\n              <button type=\"button\" className=\"primaryButton\" onClick={() => history.push(\"/grokit-frontend/signup\")}>\n                Sign up\n              </button>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\n\nfunction IntroPage() {\n  return (\n    <Container className=\"introPage\">\n      <Row className=\"introPage__introduction\">\n        <Col>\n          <p>\n            Welcome to GrokIt, please click here to <Link to=\"/grokit-frontend/signin\">Sign in</Link> or <Link to=\"/grokit-frontend/signup\">Sign Up</Link>{\" \"}\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>Why GrokIt?</h2>\n          <h3 className=\"introPage__quotation\">\n            <i>\n              grok <small>(verb)</small>\n            </i>\n          </h3>\n          <p>to understand completely and intuitively </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Image src=\"https://vectr.com/smbryar/a3qRCjhluB.svg?width=320&height=220&select=a3qRCjhluBpage0\" rounded />\n          <p>Information is lost from our memory over time if no effort is made to retain it.</p>\n        </Col>\n        <Col>\n          <Image src=\"https://vectr.com/smbryar/a1rKHNM3C.svg?width=320&height=220&select=a1rKHNM3Cpage0\" rounded />\n          <p>\n            The most effective time to practise a skill or rehearse knowledge is just before you forget it. We will remind you what to work\n            on each day, until you <strong>GrokIt</strong>.\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default IntroPage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\n\nimport { AppContext } from \"./libs/ContextLib.js\";\n\nimport SignIn from \"components/Forms/SignIn/SignIn\";\nimport SignUp from \"components/Forms/SignUp/SignUp\";\nimport ResetPassword from \"components/Forms/ResetPassword/ResetPassword\";\nimport NewProject from \"components/CreateNewProject/NewProject\";\nimport ProjectList from \"components/ProjectList/ProjectList\";\nimport HomePage from \"components/SkillsToDo/HomePage\";\nimport NavBar from \"components/NavBar/NavBar\";\n\nimport IntroPage from \"components/IntroPage/IntroPage.js\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      setLoggedIn(true);\n      const userInfo = await Auth.currentUserInfo();\n      setUserId(userInfo.username);\n    } catch (e) {}\n    setIsAuthenticating(false);\n  }\n\n  useEffect(() => {\n    if (userId) {\n      axios\n        .get(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects?userId=${userId}`)\n        .then((response) => {\n          setProjects(response.data.projects);\n        })\n        .catch((error) => {\n          console.log(\"Error fetching data\", error);\n        });\n    }\n  }, [userId]);\n\n  const addProject = ({ name = \"\" }) => {\n    const newProject = { name, userId, datePracticed: Date.now() };\n    axios\n      .post(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects`, newProject)\n      .then(({ data: { projects: resProject = [] } = {} }) => {\n        setProjects([...projects, ...resProject]);\n      })\n      .catch((error) => {\n        console.log(\"Error posting project\", error);\n      });\n  };\n\n  const addSkill = (projectId, skillName) => {\n    const newSkill = { name: skillName, projectId: projectId };\n    axios\n      .post(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills`, newSkill)\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            if (!project.skills) {\n              return {\n                ...project,\n                skillToDo: response.data.skill.skillId,\n                skills: [response.data.skill, ...skills],\n              };\n            }\n            return { ...project, skills: [response.data.skill, ...skills] };\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error posting skill\", error);\n      });\n  };\n\n  const updatePractisedSkill = (practisedSkill, difficulty) => {\n    const { projectId, skillId } = practisedSkill;\n\n    axios\n      .put(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/markAsPractised/${difficulty}`, practisedSkill)\n      .then((response) => {\n        const updatedSkill = response.data.practisedSkill[0];\n\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          if (project.projectId === projectId) {\n            project.datePractised = moment().format(\"YYYY-MM-DD\");\n            project.skillToDo = null;\n            skills.map((skill) => {\n              if (skill.skillId === skillId) {\n                skill = updatedSkill;\n              }\n              return skill;\n            });\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching data\", error);\n      });\n  };\n  const deleteSkill = (skillId) => {\n    axios\n      .delete(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`)\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          return {\n            ...project,\n            skills: skills.filter((skill) => skill.skillId !== skillId),\n          };\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting skill\", error);\n      });\n  };\n\n  const editSkillName = (skillId, skillName) => {\n    axios\n      .put(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/skills/${skillId}`, { name: skillName })\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          const { skills = [] } = project;\n          skills.map((skill) => {\n            if (skill.skillId === skillId) {\n              skill.name = skillName;\n            }\n            return skill;\n          });\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  const deleteProject = (projectId) => {\n    axios\n      .delete(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`)\n      .then((response) => {\n        const updatedProjects = projects.filter((project) => (project.projectId !== projectId ? project : null));\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error deleting project\");\n      });\n  };\n\n  const editProjectName = (projectId, projectName) => {\n    axios\n      .put(`https://zlld6v728l.execute-api.eu-west-2.amazonaws.com/dev/projects/${projectId}`, { name: projectName })\n      .then((response) => {\n        const updatedProjects = projects.map((project) => {\n          if (project.projectId === projectId) {\n            project.name = projectName;\n          }\n          return project;\n        });\n        setProjects(updatedProjects);\n      })\n      .catch((error) => {\n        console.log(\"Error updating skill\", error);\n      });\n  };\n\n  return (\n    !isAuthenticating && (\n      <Router>\n        <AppContext.Provider value={{ loggedIn, setLoggedIn, setUserId }}>\n          <NavBar />\n          <Container className=\"App\">\n            <Switch>\n              {!loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <IntroPage />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signup\">\n                    <SignUp setUserId={setUserId} />\n                  </Route>\n                  <Route path=\"/grokit-frontend/signin\">\n                    <SignIn />\n                  </Route>\n                  <Route path=\"/grokit-frontend/resetpassword\">\n                    <ResetPassword />\n                  </Route>\n                </>\n              )}\n              {loggedIn && (\n                <>\n                  <Route exact path=\"/grokit-frontend/\">\n                    <HomePage projects={projects} updatePractisedSkill={updatePractisedSkill} addProject={addProject}/>\n                  </Route>\n                  <Route path=\"/grokit-frontend/projects\">\n                    <NewProject addProject={addProject} />\n                    <ProjectList\n                      projects={projects}\n                      addSkill={addSkill}\n                      deleteSkill={deleteSkill}\n                      deleteProject={deleteProject}\n                      editSkillName={editSkillName}\n                      editProjectName={editProjectName}\n                    />\n                  </Route>\n                </>\n              )}\n            </Switch>\n          </Container>\n        </AppContext.Provider>\n      </Router>\n    )\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Amplify } from \"aws-amplify\";\nimport config from \"./config\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nAmplify.configure({\n  Auth: {\n    mandatorySignId: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}